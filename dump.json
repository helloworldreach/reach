[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Reach.js",
    "content": "import {browser} from './definitions/Browser';\nimport StreamTypes from './definitions/StreamTypes';\nimport * as Events from './definitions/Events';\nimport {audio, video} from './definitions/Codec';\nimport User from './core/User';\nimport Room from './core/Room';\nimport Invite from './core/Invite';\nimport * as DataSync from './core/util/DataSync';\nimport cache from './core/util/cache';\nimport * as Log from './core/util/Log';\nimport Media from './core/util/Media';\nimport Webcom from 'webcom/webcom';\n\n/**\n * Entry point for Reach SDK\n * @public\n */\nexport default class Reach {\n\t/**\n\t * Create Reach's data structure where the url points to (might not be the root of your namespace)\n\t * @public\n\t * @param {string|Webcom} url The url of your namespace or an existing Webcom reference.\n\t * @param {Config} [cfg] Reach configuration. You can pass constraints here\n\t * @example <caption>Init with the default configuration</caption>\n\t * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>');\n\t * @example <caption>Init and set constraints for SD video and logLevel to 'info'</caption>\n\t * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n\t *  constraints: Reach.media.constraints('SD'),\n\t *  logLevel: 'INFO'\n\t * });\n\t */\n\tconstructor(url, cfg = null) {\n\t\t// Set shared reference\n\t\tcache.base = url;\n\t\t// Set shared configuration\n\t\tcache.config = cfg;\n\t\t/**\n\t\t * List of declared callbacks\n\t\t * @type {Object}\n\t\t */\n\t\tthis._callbacks = {};\n\t}\n\n\t/**\n\t * Get versions of SDK and DataModel.The Schema version can be used to determine compatibility with the Android & iOS SDK.\n\t * @return {{sdk: string, schema: string}}\n\t */\n\tstatic get version() {\n\t\treturn {sdk: SDK_VERSION, schema: SCHEMA_VERSION};\n\t}\n\n\t/**\n\t * The supported stream types\n\t * @returns {StreamTypes}\n\t */\n\tstatic get types() {\n\t\treturn StreamTypes;\n\t}\n\n\t/**\n\t * The supported events\n\t * @return {{room: Events/Room, reach: Events/Reach, stream: Events/Stream}}\n\t */\n\tstatic get events() {\n\t\treturn {room: Events.room, reach: Events.reach, stream: Events.stream, invite: Events.invite};\n\t}\n\n\t/**\n\t * The browser's details\n\t * @return {Browser}\n\t */\n\tstatic get browser() {\n\t\treturn browser;\n\t}\n\n\t/**\n\t * Media utility functions\n\t * @return {Media}\n\t */\n\tstatic get media() {\n\t\treturn Media;\n\t}\n\n\t/**\n\t * The codec presets to use when setting {@link Config#preferredAudioCodec} or {@link Config#preferredVideoCodec}\n\t * @return {{audio: Codec/audio, video: Codec/video}}\n\t */\n\tstatic get codecs() {\n\t\treturn {audio, video};\n\t}\n\t/**\n\t * DataSync reference\n\t * @type {Webcom}\n\t */\n\tget base() {\n\t\treturn cache.base;\n\t}\n\n\t/**\n\t * The configuration\n\t * @type {Config}\n\t */\n\tget config() {\n\t\treturn cache.config;\n\t}\n\n\t/**\n\t * The connected User\n\t * @type {User}\n\t */\n\tget current() {\n\t\treturn cache.user;\n\t}\n\n\t/**\n\t * Register & Sign-in as a new user\n\t * @param {string} email The email of the user\n\t * @param {string} password The password of the user\n\t * @param {string} [name] The display name of the user (defaults to email)\n\t * @param {boolean} [rememberMe=false] keep user connected ?\n\t * @returns {Promise<User>}\n\t */\n\tregister(email, password, name, rememberMe) {\n\t\treturn cache.base.createUser(email, password)\n\t\t\t.then(auth => {\n\t\t\t\tif(auth) {\n\t\t\t\t\treturn this.login(email, password, name || email, rememberMe);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(Log.r('Reach~register'));\n\t}\n\n\t/**\n\t * Sign-in an existing user\n\t * @param {string} email The email of the user\n\t * @param {string} password The password of the user\n \t * @param {string} [name] The name of the user. Defaults to the value in base.\n\t * @param {boolean} [rememberMe=false] keep user connected ?\n\t * @returns {Promise<User>}\n\t */\n\tlogin(email, password, name, rememberMe = false) {\n\t\t// Force logout to bypass Webcom bug\n\t\tlet p = Promise.resolve();\n\t\tif(this.current && this.current.email !== email) {\n\t\t\tp = this.logout();\n\t\t}\n\t\treturn p\n\t\t\t.then(() => cache.base.authWithPassword({email, password, rememberMe}))\n\t\t\t.then(auth => User.init(auth.uid, name))\n\t\t\t.then(u => {\n\t\t\t\tcache.user = u;\n\t\t\t\treturn u;\n\t\t\t})\n\t\t\t.catch(Log.r('Reach~login'));\n\t}\n\n\t/**\n\t * Resume previous session\n\t * @returns {Promise<User>}\n\t */\n\tresume() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Resume session\n\t\t\tif(Webcom.INTERNAL.PersistentStorage.get('session')){\n\t\t\t\tcache.base.resume((error, auth) => {\n\t\t\t\t\tif(auth && !this.current) {\n\t\t\t\t\t\tUser.init(auth.uid).then(u => {\n\t\t\t\t\t\t\tcache.user = u;\n\t\t\t\t\t\t\tresolve(u);\n\t\t\t\t\t\t}, reject);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(new Error('No session to resume'));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sign-in an anonymous user\n\t * @param {string} name The display name of the user\n\t * @returns {Promise<User>}\n\t */\n\tanonymous(name) {\n\t\t// Force logout to bypass Webcom bug\n\t\tlet p = Promise.resolve();\n\t\tif(this.current && (!this.current.anonymous || this.current.name !== name)) {\n\t\t\tp = this.logout();\n\t\t}\n\t\treturn p\n\t\t\t.then(() => cache.base.authAnonymously())\n\t\t\t.then(auth => User.init(auth.uid, name))\n\t\t\t.then(u => {\n\t\t\t\tcache.user = u;\n\t\t\t\treturn u;\n\t\t\t})\n\t\t\t.catch(Log.r('Reach~anonymous'));\n\t}\n\n\t/**\n\t * Logout current user\n\t * @returns {Promise}\n\t */\n\tlogout() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet p = Promise.resolve();\n\t\t\tif(this.current != null) {\n\t\t\t\tp = User.disconnect(this.current);\n\t\t\t}\n\t\t\tp.then(() => {\n\t\t\t\tObject.keys(this._callbacks).forEach(\n\t\t\t\t\tevent => DataSync.off(Events.reach.toPath(event)(cache.user), event)\n\t\t\t\t);\n\t\t\t\tcache.base.logout(() => {\n\t\t\t\t\tcache.user = null;\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tLog.e(e);\n\t\t\t\treject(e);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get the list of registered users\n\t * @experimental Since 'search' and 'paging' features are not yet implemented in DataSync, this call can lead to a lot data being exchanged over the WebSocket.\n\t * Avoid it if your users base is pretty large.\n\t * @param {boolean} [include=false] Include current user in user's list\n\t * @return {Promise<User[], Error>}\n\t */\n\tusers(include) {\n\t\treturn DataSync.list('users', User)\n\t\t\t.then(users => {\n\t\t\t\treturn !include && users && this.current ? users.filter(user => user.uid !== this.current.uid) : users;\n\t\t\t})\n\t\t\t.catch(Log.r('Reach~users'));\n\t}\n\n\t/**\n\t * Get the list of rooms\n\t * @return {Promise<Room[], Error>}\n\t */\n\trooms() {\n\t\treturn DataSync.list('rooms', Room)\n\t\t\t.catch(Log.r('Reach~rooms'));\n\t}\n\n\t/**\n\t * Get the list of invites\n\t * @return {Promise<Invite[], Error>}\n\t */\n\tinvites() {\n\t\tif(!this.current) {\n\t\t\treturn Promise.reject(new Error('Cannot list invites without a User being logged in.'));\n\t\t}\n\t\treturn DataSync.list(`_/invites/${this.current.uid}`, Invite)\n\t\t\t.catch(Log.r('Reach~invites'));\n\t}\n\n\t/**\n\t * Register a callback for a specific event\n\t * @param {string} event The event name ({@link Events/Reach}). Can be:\n\t * - USER_ADDED\n\t * - USER_CHANGED\n\t * - USER_REMOVED\n\t * - ROOM_ADDED\n\t * - ROOM_CHANGED\n\t * - ROOM_REMOVED\n\t * - INVITE_ADDED\n\t * - INVITE_CHANGED\n\t * @param {function} callback The callback for the event, the arguments depends on the type of event:\n\t * - USER_*: callback({@link User} u)\n\t * - ROOM_*: callback({@link Room} r)\n\t * - INVITE_*: callback({@link Invite} i)\n\t * @param {Webcom/api.Query~cancelCallback} [cancelCallback] The error callback for the event, takes an Error as only argument\n\t */\n\ton(event, callback, cancelCallback) {\n\t\tconst path = Events.reach.toPath(event)(cache.user);\n\t\tif(path) {\n\t\t\tconst cls = Events.reach.toClass(event);\n\t\t\tconst cb = snapData => {\n\t\t\t\tconst d = cls ? new cls(snapData) : null;\n\t\t\t\tLog.i(`Reach~on(${event})`, d);\n\t\t\t\tcallback(d);\n\t\t\t};\n\t\t\tDataSync.on(path, event, cb, cancelCallback);\n\t\t\tif(!this._callbacks[event]) {\n\t\t\t\tthis._callbacks[event] = [];\n\t\t\t}\n\t\t\tthis._callbacks[event].push(cb);\n\t\t}\n\t}\n\n\t/**\n\t * Create a new room\n\t * @param {string} [name] The room name\n\t * @param {object} [extra] Extra informations\n\t * @param {boolean} [publicRoom=false] Indicates public room\n\t * @returns {Promise<Room>}\n\t */\n\tcreateRoom(name, extra, publicRoom = false) {\n\t\tif(!this.current) {\n\t\t\treturn Promise.reject(new Error('Cannot create a Room without a User being logged in.'));\n\t\t}\n\t\treturn Room.create(name, extra, publicRoom);\n\t}\n\n\t/**\n\t * Get a list of all opened {@link PeerConnection}s\n\t * @return {*}\n\t */\n\tget peerConnections () {\n\t\treturn cache.peerConnections.stacks;\n\t}\n\n\t/**\n\t * Get a {@link Room} from its `uid`\n\t * @param {string} uid The room's UID\n\t * @returns {Promise.<Room>}\n\t */\n\tgetRoom (uid) {\n\t\treturn Room.get(uid);\n\t}\n\n\t/**\n\t * Get a {@link User} from its `uid`\n\t * @param {string} uid The user's UID\n\t * @returns {Promise.<User>}\n\t */\n\tgetUser (uid) {\n\t\treturn User.get(uid);\n\t}\n}\n\nmodule.exports = Reach;\n",
    "static": true,
    "longname": "src/Reach.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "Reach",
    "memberof": "src/Reach.js",
    "static": true,
    "longname": "src/Reach.js~Reach",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/Reach.js",
    "importStyle": "Reach",
    "description": "Entry point for Reach SDK",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#constructor",
    "access": "public",
    "description": "Create Reach's data structure where the url points to (might not be the root of your namespace)",
    "examples": [
      "<caption>Init with the default configuration</caption>\nvar myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>');",
      "<caption>Init and set constraints for SD video and logLevel to 'info'</caption>\nvar myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n constraints: Reach.media.constraints('SD'),\n logLevel: 'INFO'\n});"
    ],
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Webcom"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url of your namespace or an existing Webcom reference."
      },
      {
        "nullable": null,
        "types": [
          "Config"
        ],
        "spread": false,
        "optional": true,
        "name": "cfg",
        "description": "Reach configuration. You can pass constraints here"
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/Reach.js~Reach",
    "static": false,
    "longname": "src/Reach.js~Reach#_callbacks",
    "access": null,
    "description": "List of declared callbacks",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "get",
    "name": "version",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.version",
    "access": null,
    "description": "Get versions of SDK and DataModel.The Schema version can be used to determine compatibility with the Android & iOS SDK.",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "{sdk: string, schema: string}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"sdk\": *, \"schema\": *}"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "get",
    "name": "types",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.types",
    "access": null,
    "description": "The supported stream types",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{StreamTypes}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StreamTypes"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "get",
    "name": "events",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.events",
    "access": null,
    "description": "The supported events",
    "lineNumber": 64,
    "return": {
      "nullable": null,
      "types": [
        "{room: Events/Room, reach: Events/Reach, stream: Events/Stream}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"room\": *, \"reach\": *, \"stream\": *, \"invite\": *}"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "get",
    "name": "browser",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.browser",
    "access": null,
    "description": "The browser's details",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "Browser"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "get",
    "name": "media",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.media",
    "access": null,
    "description": "Media utility functions",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "Media"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "get",
    "name": "codecs",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Reach.js~Reach.codecs",
    "access": null,
    "description": "The codec presets to use when setting {@link Config#preferredAudioCodec} or {@link Config#preferredVideoCodec}",
    "lineNumber": 88,
    "return": {
      "nullable": null,
      "types": [
        "{audio: Codec/audio, video: Codec/video}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"audio\": *, \"video\": *}"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "get",
    "name": "base",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#base",
    "access": null,
    "description": "DataSync reference",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Webcom"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "get",
    "name": "config",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#config",
    "access": null,
    "description": "The configuration",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "Config"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "get",
    "name": "current",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#current",
    "access": null,
    "description": "The connected User",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "User"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "register",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#register",
    "access": null,
    "description": "Register & Sign-in as a new user",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The email of the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password of the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The display name of the user (defaults to email)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "rememberMe",
        "description": "keep user connected ?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "login",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#login",
    "access": null,
    "description": "Sign-in an existing user",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The email of the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password of the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The name of the user. Defaults to the value in base."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "rememberMe",
        "description": "keep user connected ?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "resume",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#resume",
    "access": null,
    "description": "Resume previous session",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User>}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "anonymous",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#anonymous",
    "access": null,
    "description": "Sign-in an anonymous user",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The display name of the user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "logout",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#logout",
    "access": null,
    "description": "Logout current user",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "users",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#users",
    "access": null,
    "description": "Get the list of registered users",
    "lineNumber": 233,
    "experimental": "Since 'search' and 'paging' features are not yet implemented in DataSync, this call can lead to a lot data being exchanged over the WebSocket.\nAvoid it if your users base is pretty large.",
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "include",
        "description": "Include current user in user's list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "rooms",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#rooms",
    "access": null,
    "description": "Get the list of rooms",
    "lineNumber": 245,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Room[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "invites",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#invites",
    "access": null,
    "description": "Get the list of invites",
    "lineNumber": 254,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Invite[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "on",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#on",
    "access": null,
    "description": "Register a callback for a specific event",
    "lineNumber": 279,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event name ({@link Events/Reach}). Can be:\n- USER_ADDED\n- USER_CHANGED\n- USER_REMOVED\n- ROOM_ADDED\n- ROOM_CHANGED\n- ROOM_REMOVED\n- INVITE_ADDED\n- INVITE_CHANGED"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for the event, the arguments depends on the type of event:\n- USER_*: callback({@link User} u)\n- ROOM_*: callback({@link Room} r)\n- INVITE_*: callback({@link Invite} i)"
      },
      {
        "nullable": null,
        "types": [
          "Webcom/api.Query~cancelCallback"
        ],
        "spread": false,
        "optional": true,
        "name": "cancelCallback",
        "description": "The error callback for the event, takes an Error as only argument"
      }
    ]
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "createRoom",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#createRoom",
    "access": null,
    "description": "Create a new room",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Room>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The room name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "extra",
        "description": "Extra informations"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "publicRoom",
        "description": "Indicates public room"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Room>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 23,
    "kind": "get",
    "name": "peerConnections",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#peerConnections",
    "access": null,
    "description": "Get a list of all opened {@link PeerConnection}s",
    "lineNumber": 314,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "getRoom",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#getRoom",
    "access": null,
    "description": "Get a {@link Room} from its `uid`",
    "lineNumber": 323,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Room>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "The room's UID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Room>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "getUser",
    "memberof": "src/Reach.js~Reach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Reach.js~Reach#getUser",
    "access": null,
    "description": "Get a {@link User} from its `uid`",
    "lineNumber": 332,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "The user's UID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 26,
    "kind": "file",
    "name": "src/core/Config.js",
    "content": "import media from './util/Media';\nimport * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\nimport cache from './util/cache';\n\nconst _flattenServers = servers => {\n\tconst _expand = servers.map(server => {\n\t\tconst {username, credential, urls, url} = server;\n\t\tconst uris = urls || url;\n\t\tif(typeof uris !== 'string' ) {\n\t\t\treturn uris.map(uri => ({username, credential, urls: uri}));\n\t\t}\n\t\treturn [server];\n\t});\n\treturn [].concat(..._expand);\n};\n\n/**\n * The Reach configuration object\n * @class Config\n */\nexport default class Config {\n\t/**\n\t * Create configuration\n\t * @access protected\n\t * @param obj\n\t */\n\tconstructor(obj) {\n\t\t/**\n\t\t * The default media constraints. These can be overridden when subscribing to a stream.\n\t\t * @type {MediaStreamConstraints}\n\t\t */\n\t\tthis.constraints = null;\n\n\t\t/**\n\t\t * The id/element dom element that will hold the local video/audio element\n\t\t * @type {string|Element}\n\t\t */\n\t\tthis.localStreamContainer = null;\n\t\t/**\n\t\t * The id/element dom element that will hold the remote video/audio element\n\t\t * @type {string|Element}\n\t\t */\n\t\tthis.remoteStreamContainer = null;\n\n\t\t/**\n\t\t * The preferred video Codec. Takes a RegExp matching the codec name and sample rate.\n\t\t * Predefined values can be found in {@link Codec/video}\n\t\t * @type {RegExp}\n\t\t * @example <caption>Prefer VP9</caption>\n\t\t * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n\t\t *  preferredVideoCodec: Reach.codecs.video.VP9\n\t\t * });\n\t\t */\n\t\tthis.preferredVideoCodec = null;\n\n\t\t/**\n\t\t * The preferred audio Codec. Takes a RegExp matching the codec name and sample rate.\n\t\t * Predefined values can be found in {@link Codec/audio}\n\t\t * @type {RegExp}\n\t\t * @example <caption>Prefer opus</caption>\n\t\t * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n\t\t *  preferredAudioCodec: Reach.codecs.audio.OPUS\n\t\t * });\n\t\t */\n\t\tthis.preferredAudioCodec = null;\n\n\t\t// Populate with default values\n\t\tthis.reset();\n\n\t\t// Populate with data\n\t\tthis.assign(obj);\n\n\t\t// Read ICE servers from server\n\t\tDataSync.get('_/ice').then(snapData => {\n\t\t\tif(snapData) {\n\t\t\t\tthis.iceServers = snapData.val();\n\t\t\t\tLog.i('ICEServers', this.iceServers.length > 0 ? this.iceServers : 'None');\n\t\t\t}\n\t\t}, e => Log.d('ICEServers', e));\n\n\t\t// TODO #Feat: Add boolean prop to request permission on start, sdpEditor (for user defined SDP modifications)\n\t}\n\n\t/**\n\t * Assign new conf values\n\t * @access protected\n\t * @param {object} obj the new conf values\n\t */\n\tassign(obj) {\n\t\tObject.keys(obj || {}).forEach(key => {this[key] = obj[key];});\n\t}\n\n\t/**\n\t * The log level (DEBUG, INFO, WARN, ERROR)\n\t * @type {string}\n\t */\n\tset logLevel(level) {\n\t\tcache.logLevel = level;\n\t}\n\n\t/**\n\t * The log level (DEBUG, INFO, WARN, ERROR)\n\t * @returns {string}\n\t */\n\tget logLevel() {\n\t\treturn cache.logLevel;\n\t}\n\n\t/**\n\t * List of TURN/STUN servers to use for ICE. This list will be merged with the ICE servers declared in the namespace (**_/ice**).\n\t * @type {ICEServer[]}\n\t */\n\tset iceServers(servers) {\n\t\tLog.d('Config~set~iceServers', servers);\n\t\tif(servers) {\n\t\t\tif (!this._iceServers) {\n\t\t\t\t/**\n\t\t\t\t * @ignore\n\t\t\t\t */\n\t\t\t\tthis._iceServers = [].concat(servers || []);\n\t\t\t} else {\n\t\t\t\t// flatten existing\n\t\t\t\tconst _currentServers = _flattenServers(this._iceServers);\n\t\t\t\t// flatten new\n\t\t\t\tconst _newServers = _flattenServers(servers);\n\t\t\t\t// Add only the missing servers\n\t\t\t\t_newServers.forEach(newServer => {\n\t\t\t\t\tif(!_currentServers.some(server =>\n\t\t\t\t\t\t\tserver.urls === newServer.urls &&\n\t\t\t\t\t\t\tserver.username === newServer.username &&\n\t\t\t\t\t\t\tserver.credential === newServer.credential)) {\n\t\t\t\t\t\t_currentServers.push(newServer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// Re-group by username/credential\n\t\t\t\tthis._iceServers = _currentServers.reduce((previous, current) => {\n\t\t\t\t\tconst {username, credential, urls} = current;\n\t\t\t\t\tconst idx = previous.findIndex(s => s.username === username && s.credential === credential);\n\t\t\t\t\tif(idx >= 0) {\n\t\t\t\t\t\tprevious[idx].urls.push(urls);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious.push({username, credential, urls: [urls]});\n\t\t\t\t\t}\n\t\t\t\t\treturn previous;\n\t\t\t\t}, []);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * List of TURN/STUN servers to use for ICE. This list will be merged with the ICE servers declared in the namespace (**_/ice**).\n\t * @type {ICEServer[]}\n\t */\n\tget iceServers() {\n\t\treturn this._iceServers || [\n\t\t\t{\n\t\t\t\tusername: 'admin',\n\t\t\t\tcredential: 'webcom1234',\n\t\t\t\turls: [\n\t\t\t\t\t'turns:turn1.webcom.orange.com:443',\n\t\t\t\t\t'turn:turn1.webcom.orange.com:443?transport=tcp',\n\t\t\t\t\t'turn:turn1.webcom.orange.com:3478?transport=tcp'\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\n\t/**\n\t * Resets configuration to default values\n\t * @protected\n\t */\n\treset () {\n\t\tthis.assign({\n\t\t\tconstraints: media.constraints(),\n\t\t\tlogLevel: 'ERROR'\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Config.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 27,
    "kind": "function",
    "name": "_flattenServers",
    "memberof": "src/core/Config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Config.js~_flattenServers",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/Config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "servers",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "class",
    "name": "Config",
    "memberof": "src/core/Config.js",
    "static": true,
    "longname": "src/core/Config.js~Config",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/core/Config.js",
    "importStyle": "Config",
    "description": "The Reach configuration object",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Config"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#constructor",
    "access": "protected",
    "description": "Create configuration",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "constraints",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#constraints",
    "access": null,
    "description": "The default media constraints. These can be overridden when subscribing to a stream.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "MediaStreamConstraints"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "localStreamContainer",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#localStreamContainer",
    "access": null,
    "description": "The id/element dom element that will hold the local video/audio element",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "remoteStreamContainer",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#remoteStreamContainer",
    "access": null,
    "description": "The id/element dom element that will hold the remote video/audio element",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "preferredVideoCodec",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#preferredVideoCodec",
    "access": null,
    "description": "The preferred video Codec. Takes a RegExp matching the codec name and sample rate.\nPredefined values can be found in {@link Codec/video}",
    "examples": [
      "<caption>Prefer VP9</caption>\nvar myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n preferredVideoCodec: Reach.codecs.video.VP9\n});"
    ],
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "preferredAudioCodec",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#preferredAudioCodec",
    "access": null,
    "description": "The preferred audio Codec. Takes a RegExp matching the codec name and sample rate.\nPredefined values can be found in {@link Codec/audio}",
    "examples": [
      "<caption>Prefer opus</caption>\nvar myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n preferredAudioCodec: Reach.codecs.audio.OPUS\n});"
    ],
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "iceServers",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#iceServers",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "assign",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#assign",
    "access": "protected",
    "description": "Assign new conf values",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the new conf values"
      }
    ]
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#[key]",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "set",
    "name": "logLevel",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#logLevel",
    "access": null,
    "description": "The log level (DEBUG, INFO, WARN, ERROR)",
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 39,
    "kind": "get",
    "name": "logLevel",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#logLevel",
    "access": null,
    "description": "The log level (DEBUG, INFO, WARN, ERROR)",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "set",
    "name": "iceServers",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#iceServers",
    "access": null,
    "description": "List of TURN/STUN servers to use for ICE. This list will be merged with the ICE servers declared in the namespace (**_/ice**).",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "ICEServer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "_iceServers",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#_iceServers",
    "access": null,
    "description": "",
    "lineNumber": 121,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "_iceServers",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#_iceServers",
    "access": null,
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "get",
    "name": "iceServers",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#iceServers",
    "access": null,
    "description": "List of TURN/STUN servers to use for ICE. This list will be merged with the ICE servers declared in the namespace (**_/ice**).",
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "ICEServer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "reset",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#reset",
    "access": "protected",
    "description": "Resets configuration to default values",
    "lineNumber": 173,
    "params": []
  },
  {
    "__docId__": 45,
    "kind": "file",
    "name": "src/core/Device.js",
    "content": "/**\n * User device\n * @access protected\n */\nexport default class Device {\n\t/**\n\t * Create a device\n\t * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n\t * @access protected\n\t */\n\tconstructor(snapData) {\n\t\tconst values = Object.assign({}, snapData.val());\n\t\t/**\n\t\t * Device's unique id\n\t\t * @type string\n\t\t */\n\t\tthis.uid = snapData.name();\n\t\t/**\n\t\t * Device's OS\n\t\t * @type {string}\n\t\t */\n\t\tthis.os = values.os;\n\t\t/**\n\t\t * Device's userAgent\n\t\t * @type {string}\n\t\t */\n\t\tthis.userAgent = values.userAgent;\n\t\t/**\n\t\t * Device's last know status\n\t\t * - CONNECTED\n\t\t * - NOT_CONNECTED\n\t\t * - SLEEPING\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = values.status;\n\t\t/**\n\t\t * Device's sdk\n\t\t * @type {{reach: string, webcom: string}}\n\t\t */\n\t\tthis.sdk = values.sdk;\n\t\t// TODO #Feat: Add 'extra' property for unrestricted additional information ?\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Device.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 46,
    "kind": "class",
    "name": "Device",
    "memberof": "src/core/Device.js",
    "static": true,
    "longname": "src/core/Device.js~Device",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/Device.js",
    "importStyle": "Device",
    "description": "User device",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 47,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Device.js~Device",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Device.js~Device#constructor",
    "access": "protected",
    "description": "Create a device",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      }
    ]
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/Device.js~Device",
    "static": false,
    "longname": "src/core/Device.js~Device#uid",
    "access": null,
    "description": "Device's unique id",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 49,
    "kind": "member",
    "name": "os",
    "memberof": "src/core/Device.js~Device",
    "static": false,
    "longname": "src/core/Device.js~Device#os",
    "access": null,
    "description": "Device's OS",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "userAgent",
    "memberof": "src/core/Device.js~Device",
    "static": false,
    "longname": "src/core/Device.js~Device#userAgent",
    "access": null,
    "description": "Device's userAgent",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/Device.js~Device",
    "static": false,
    "longname": "src/core/Device.js~Device#status",
    "access": null,
    "description": "Device's last know status\n- CONNECTED\n- NOT_CONNECTED\n- SLEEPING",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "sdk",
    "memberof": "src/core/Device.js~Device",
    "static": false,
    "longname": "src/core/Device.js~Device#sdk",
    "access": null,
    "description": "Device's sdk",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "{reach: string, webcom: string}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/core/Invite.js",
    "content": "import {ONGOING, ACCEPTED, REJECTED, CANCELED} from './util/constants';\nimport * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\nimport cache from './util/cache';\nimport Room from './Room';\nimport * as Events from '../definitions/Events';\n\n/**\n * Update\n * @param {Invite} invite The invite\n * @param {string} status The new status\n * @param {string} [reason=null] The reason (a message)\n * @param {object} [_ended=null]\n * @access private\n * @returns {Promise<Invite, Error>}\n */\nconst update = (invite, status, reason = null, _ended = null) => {\n\tconst values = {\n\t\tstatus,\n\t\treason,\n\t\t_ended\n\t};\n\n\tif(invite.status !== ONGOING) {\n\t\treturn Promise.reject(new Error('This invitation has already been answered'));\n\t}\n\treturn DataSync.update(`_/invites/${invite.to}/${invite.uid}`, values)\n\t\t.then(() => {\n\t\t\tObject.keys(values).forEach(prop => {\n\t\t\t\tinvite[prop] = values[prop];\n\t\t\t});\n\t\t\treturn Room.get(invite.room);\n\t\t})\n\t\t.then(room => ({room, invite}))\n\t\t.catch(Log.r('Invite_update'));\n};\n\n/**\n * Invitation\n * @public\n */\nexport default class Invite {\n\n\t/**\n\t * Create an invite\n\t * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n\t * @access protected\n\t */\n\tconstructor(snapData) {\n\t\tlet values = snapData;\n\t\tif(snapData && snapData.val && typeof snapData.val === 'function'){\n\t\t\tvalues = Object.assign({}, snapData.val(), {uid: snapData.name(), to: snapData.ref().parent().name()});\n\t\t}\n\t\t/**\n\t\t * Invite's unique id\n\t\t * @type string\n\t\t */\n\t\tthis.uid = values.uid;\n\t\t/**\n\t\t * Invite's sender uid\n\t\t * @type {string}\n\t\t */\n\t\tthis.from = values.from;\n\t\t/**\n\t\t * Invitee's uid\n\t\t * @type {string}\n\t\t */\n\t\tthis.to = values.to;\n\t\t/**\n\t\t * The id of the room associated to the invite\n\t\t * @type {string}\n\t\t */\n\t\tthis.room = values.room;\n\t\t/**\n\t\t * The invitation status :\n\t\t * - ONGOING - The receiver has not yet responded to the invitation\n\t\t * - ACCEPTED - The receiver has accepted the invitation\n\t\t * - REJECTED - The receiver has rejected the invitation\n\t\t * - CANCELED - The sender canceled the invitation\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = values.status;\n\t\t/**\n\t\t * Invite message. This will be either a custom message if the status is ONGOING or a reason when status is CANCELED|REJECTED.\n\t\t * @type {string}\n\t\t */\n\t\tthis.topic = values.topic;\n\t\t/**\n\t\t * Invite creation timestamp\n\t\t * @type {number}\n\t\t */\n\t\tthis._created = values._created;\n\t\t/**\n\t\t * Invite expiration timestamp\n\t\t * @type {number}\n\t\t */\n\t\tthis._ended = values._ended;\n\t\t/**\n\t\t * Invite events callbacks\n\t\t * @type {{}}\n\t\t * @private\n\t\t */\n\t\tthis._callbacks = {};\n\t}\n\n\t/**\n\t * Is this invitation waiting for a reply ?\n\t * @type {boolean}\n\t */\n\tget isOnGoing() {\n\t\treturn this.status === ONGOING;\n\t}\n\n\t/**\n\t * Was this invitation rejected ?\n\t * @type {boolean}\n\t */\n\tget isRejected() {\n\t\treturn this.status === REJECTED;\n\t}\n\n\t/**\n\t * Was this invitation accepted ?\n\t * @type {boolean}\n\t */\n\tget isAccepted() {\n\t\treturn this.status === ACCEPTED;\n\t}\n\n\t/**\n\t * Was this invitation canceled ?\n\t * @type {boolean}\n\t */\n\tget isCanceled() {\n\t\treturn this.status === CANCELED;\n\t}\n\n\t/**\n\t * Cancels the invitation. Only the sender can cancel the invitation.\n\t * @param {string} [reason] The reason the sender is canceling the invite\n\t * @return {Promise<Invite>}\n\t */\n\tcancel(reason) {\n\t\treturn update(this, CANCELED, reason, DataSync.ts());\n\t}\n\n\t/**\n\t * Rejects the invitation. Only the receiver can reject the invitation.\n\t * @param {string} [reason] The reason the receiver is rejecting the invite\n\t * @return {Promise<Invite>}\n\t */\n\treject(reason) {\n\t\treturn update(this, REJECTED, reason, DataSync.ts());\n\t}\n\n\t/**\n\t * Accept the invitation. Only the receiver can accept the invitation.\n\t * @return {Promise<Invite>}\n\t */\n\taccept() {\n\t\treturn update(this, ACCEPTED);\n\t}\n\n\t/**\n\t * Register a callback for a status update\n\t * @param {string} status Can be:\n\t * - ACCEPTED\n\t * - REJECTED\n\t * - CANCELED\n\t * @param {function} callback\n\t */\n\ton(status, callback) {\n\t\tif(Events.invite.supports(status)) {\n\t\t\t// Register callback\n\t\t\tif (!this._callbacks[status]) {\n\t\t\t\tthis._callbacks[status] = [];\n\t\t\t}\n\t\t\tthis._callbacks[status].push(callback);\n\t\t\t// Defined listener & subscribe if needed\n\t\t\tif (!this._listener) {\n\t\t\t\t/**\n\t\t\t\t * Invite status update callback\n\t\t\t\t * @type {function}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tthis._listener = snapData => {\n\t\t\t\t\tconst updated = snapData.val();\n\t\t\t\t\tif (updated !== null && updated !== this.status) {\n\t\t\t\t\t\tthis.status = updated;\n\t\t\t\t\t\t(this._callbacks[updated] || []).forEach(cb => {\n\t\t\t\t\t\t\tcb(this);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tDataSync.on(`_/invites/${this.to}/${this.uid}/status`, 'value', this._listener.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register a callback for all status change events\n\t * @param {function} callback\n\t */\n\tonStatusChange(callback) {\n\t\t[ACCEPTED, REJECTED, CANCELED].forEach(event => {\n\t\t\tthis.on(event, callback);\n\t\t});\n\t}\n\n\t/**\n\t * Un-register a callback for a status update\n\t * @param {string} [status] Can be:\n\t * - ACCEPTED\n\t * - REJECTED\n\t * - CANCELED\n\t * - null This will un-register all callbacks\n\t * @param {function} [callback]\n\t */\n\toff(status, callback) {\n\t\tif(!status) {\n\t\t\tthis._callbacks = {};\n\t\t} else if(this._callbacks[status]) {\n\t\t\tif(callback) {\n\t\t\t\tconst idx = this._callbacks[status].findIndex(cb => cb === callback);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._callbacks.splice(idx, 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._callbacks[status] = [];\n\t\t\t}\n\t\t}\n\t\tif(![CANCELED, ACCEPTED, REJECTED].some(event => this._callbacks[event] && this._callbacks[event].length > 0)){\n\t\t\tDataSync.off(`_/invites/${this.to}/${this.uid}/status`, 'value');\n\t\t}\n\t}\n\n\t/**\n\t * Un-register a callback for all status change events\n\t * @param {function} [callback]\n\t */\n\toffStatusChange(callback) {\n\t\tif(!callback) {\n\t\t\tthis.off();\n\t\t} else {\n\t\t\t[ACCEPTED, REJECTED, CANCELED].forEach(event => {\n\t\t\t\tthis.off(event, callback);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Create the invitation & add the user to the participants list\n\t * @access protected\n\t * @param {User} invitee The user to invite\n\t * @param {Room} room The room to invite the user to\n\t * @param {string} [message] A message for the invitee\n\t */\n\tstatic send(invitee, room, message = null) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can send an invite.'));\n\t\t}\n\n\t\tconst inviteMetaData = {\n\t\t\tfrom: cache.user.uid,\n\t\t\troom: room.uid,\n\t\t\tstatus: ONGOING,\n\t\t\t_created: DataSync.ts(),\n\t\t\ttopic: message\n\t\t};\n\n\t\treturn DataSync.push(`_/invites/${invitee.uid}`, inviteMetaData)\n\t\t\t.then(inviteRef => {\n\t\t\t\tconst inviteId = inviteRef.name();\n\t\t\t\treturn new Invite(Object.assign({uid: inviteId, to: invitee.uid}, inviteMetaData));\n\t\t\t})\n\t\t\t.catch(Log.r('Invite#send'));\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Invite.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "update",
    "memberof": "src/core/Invite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Invite.js~update",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/Invite.js",
    "importStyle": null,
    "description": "Update",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Invite, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Invite"
        ],
        "spread": false,
        "optional": false,
        "name": "invite",
        "description": "The invite"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "The new status"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "reason",
        "description": "The reason (a message)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "_ended",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Invite, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "Invite",
    "memberof": "src/core/Invite.js",
    "static": true,
    "longname": "src/core/Invite.js~Invite",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/Invite.js",
    "importStyle": "Invite",
    "description": "Invitation",
    "lineNumber": 42,
    "interface": false
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#constructor",
    "access": "protected",
    "description": "Create an invite",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      }
    ]
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#uid",
    "access": null,
    "description": "Invite's unique id",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "from",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#from",
    "access": null,
    "description": "Invite's sender uid",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "to",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#to",
    "access": null,
    "description": "Invitee's uid",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "room",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#room",
    "access": null,
    "description": "The id of the room associated to the invite",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#status",
    "access": null,
    "description": "The invitation status :\n- ONGOING - The receiver has not yet responded to the invitation\n- ACCEPTED - The receiver has accepted the invitation\n- REJECTED - The receiver has rejected the invitation\n- CANCELED - The sender canceled the invitation",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "topic",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#topic",
    "access": null,
    "description": "Invite message. This will be either a custom message if the status is ONGOING or a reason when status is CANCELED|REJECTED.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "_created",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#_created",
    "access": null,
    "description": "Invite creation timestamp",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "_ended",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#_ended",
    "access": null,
    "description": "Invite expiration timestamp",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#_callbacks",
    "access": "private",
    "description": "Invite events callbacks",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "isOnGoing",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#isOnGoing",
    "access": null,
    "description": "Is this invitation waiting for a reply ?",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "isRejected",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#isRejected",
    "access": null,
    "description": "Was this invitation rejected ?",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "get",
    "name": "isAccepted",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#isAccepted",
    "access": null,
    "description": "Was this invitation accepted ?",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "get",
    "name": "isCanceled",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#isCanceled",
    "access": null,
    "description": "Was this invitation canceled ?",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "cancel",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#cancel",
    "access": null,
    "description": "Cancels the invitation. Only the sender can cancel the invitation.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "reason",
        "description": "The reason the sender is canceling the invite"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Invite>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "reject",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#reject",
    "access": null,
    "description": "Rejects the invitation. Only the receiver can reject the invitation.",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "reason",
        "description": "The reason the receiver is rejecting the invite"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Invite>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "accept",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#accept",
    "access": null,
    "description": "Accept the invitation. Only the receiver can accept the invitation.",
    "lineNumber": 160,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Invite>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "on",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#on",
    "access": null,
    "description": "Register a callback for a status update",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "Can be:\n- ACCEPTED\n- REJECTED\n- CANCELED"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_listener",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#_listener",
    "access": "private",
    "description": "Invite status update callback",
    "lineNumber": 186,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#status",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "onStatusChange",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#onStatusChange",
    "access": null,
    "description": "Register a callback for all status change events",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "off",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#off",
    "access": null,
    "description": "Un-register a callback for a status update",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "status",
        "description": "Can be:\n- ACCEPTED\n- REJECTED\n- CANCELED\n- null This will un-register all callbacks"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/core/Invite.js~Invite",
    "static": false,
    "longname": "src/core/Invite.js~Invite#_callbacks",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "offStatusChange",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Invite.js~Invite#offStatusChange",
    "access": null,
    "description": "Un-register a callback for all status change events",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "send",
    "memberof": "src/core/Invite.js~Invite",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Invite.js~Invite.send",
    "access": "protected",
    "description": "Create the invitation & add the user to the participants list",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "invitee",
        "description": "The user to invite"
      },
      {
        "nullable": null,
        "types": [
          "Room"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "The room to invite the user to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "A message for the invitee"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/core/Message.js",
    "content": "import * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\n\nimport cache from './util/cache';\n/**\n * Instant Message\n * @public\n */\nexport default class Message {\n\t/**\n\t * Create a message\n\t * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n\t * @param {string} roomId The message's room id\n\t * @access protected\n\t */\n\tconstructor(snapData, roomId) {\n\t\tconst values = Object.assign({}, snapData.val());\n\t\t/**\n\t\t * The message unique id\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = snapData.name();\n\t\t/**\n\t\t * The room uid\n\t\t * @type {string}\n\t\t */\n\t\tthis.roomId = roomId;\n\t\t/**\n\t\t * The message\n\t\t * @type {string}\n\t\t */\n\t\tthis.text = values.text;\n\t\t/**\n\t\t * The message sender\n\t\t * @type {string}\n\t\t */\n\t\tthis.from = values.from;\n\t\t/**\n\t\t * Joined date\n\t\t * @type {number}\n\t\t */\n\t\tthis._created = values._created;\n\t}\n\n\t/**\n\t * Edit the text message. Only the sender or moderator/owner of the room can edit a message.\n\t * @param {string} newText The new message\n\t * @returns {Promise<Message>}\n\t */\n\tedit(newText) {\n\t\treturn DataSync.update(`/rooms/${this.roomId}/messages/${this.uid}`, {text: newText})\n\t\t\t.then(() => {\n\t\t\t\tthis.text = newText;\n\t\t\t\treturn this;\n\t\t\t})\n\t\t\t.catch(Log.r('Message~edit'));\n\t}\n\n\t/**\n\t * Remove the text message. Only the sender or moderator/owner of the room can remove a message.\n\t * @returns {Promise}\n\t */\n\tremove() {\n\t\treturn DataSync.remove(`/rooms/${this.roomId}/messages/${this.uid}`)\n\t\t\t.catch(Log.r('Message~remove'));\n\t}\n\n\t/**\n\t *\n\t * @param {Room} room The room to send the message to\n\t * @param {string} text The message\n\t * @return {Promise<Message>}\n\t */\n\tstatic send(room, text) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Cannot send a message to the Room without a User being logged in.'));\n\t\t}\n\t\tconst data = {\n\t\t\tfrom: cache.user.uid,\n\t\t\t_created: DataSync.ts(),\n\t\t\ttext\n\t\t};\n\t\treturn DataSync.push(`_/rooms/${room.uid}/messages`, data)\n\t\t\t.then(pushRef => DataSync.get(`_/rooms/${room.uid}/messages/${pushRef.name()}`))\n\t\t\t.then(snapData => new Message(snapData, room.uid))\n\t\t\t.catch(Log.r('Message#send'));\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Message.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "Message",
    "memberof": "src/core/Message.js",
    "static": true,
    "longname": "src/core/Message.js~Message",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/Message.js",
    "importStyle": "Message",
    "description": "Instant Message",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Message.js~Message",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Message.js~Message#constructor",
    "access": "protected",
    "description": "Create a message",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "roomId",
        "description": "The message's room id"
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#uid",
    "access": null,
    "description": "The message unique id",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "roomId",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#roomId",
    "access": null,
    "description": "The room uid",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "text",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#text",
    "access": null,
    "description": "The message",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "from",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#from",
    "access": null,
    "description": "The message sender",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "_created",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#_created",
    "access": null,
    "description": "Joined date",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "edit",
    "memberof": "src/core/Message.js~Message",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Message.js~Message#edit",
    "access": null,
    "description": "Edit the text message. Only the sender or moderator/owner of the room can edit a message.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Message>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newText",
        "description": "The new message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Message>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "text",
    "memberof": "src/core/Message.js~Message",
    "static": false,
    "longname": "src/core/Message.js~Message#text",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "remove",
    "memberof": "src/core/Message.js~Message",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Message.js~Message#remove",
    "access": null,
    "description": "Remove the text message. Only the sender or moderator/owner of the room can remove a message.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "send",
    "memberof": "src/core/Message.js~Message",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Message.js~Message.send",
    "access": null,
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Room"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "The room to send the message to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "The message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Message>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/core/Participant.js",
    "content": "/**\n * {@link Room} participant\n * @public\n */\nexport default class Participant {\n\t/**\n\t * Create a participant\n\t * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n\t * @access protected\n\t */\n\tconstructor(snapData) {\n\t\tconst values = Object.assign({}, snapData.val());\n\t\t/**\n\t\t * The participant unique id\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = snapData.name();\n\t\t/**\n\t\t * The Participant's role. Can be:\n\t\t * - OWNER: the owner/creator of the {@link Room}\n\t\t * - MODERATOR: a participant with {@link Room} management Rights\n\t\t * - NONE: basic participant\n\t\t * @type {string}\n\t\t */\n\t\tthis.role = values.role;\n\t\t/**\n\t\t * The participant status Can be:\n\t\t * - NOT_CONNECTED: the participant did not accept the invitation yet and/or did not join the {@link Room} yet\n\t\t * - CONNECTED: the participant is in the {@link Room}\n\t\t * - WAS_CONNECTED: the participant left the {@link Room}\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = values.status;\n\t\t/**\n\t\t * Joined date\n\t\t * @type {number}\n\t\t */\n\t\tthis._joined = values._joined;\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Participant.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "class",
    "name": "Participant",
    "memberof": "src/core/Participant.js",
    "static": true,
    "longname": "src/core/Participant.js~Participant",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/Participant.js",
    "importStyle": "Participant",
    "description": "{@link Room} participant",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 95,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Participant.js~Participant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Participant.js~Participant#constructor",
    "access": "protected",
    "description": "Create a participant",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      }
    ]
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/Participant.js~Participant",
    "static": false,
    "longname": "src/core/Participant.js~Participant#uid",
    "access": null,
    "description": "The participant unique id",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "role",
    "memberof": "src/core/Participant.js~Participant",
    "static": false,
    "longname": "src/core/Participant.js~Participant#role",
    "access": null,
    "description": "The Participant's role. Can be:\n- OWNER: the owner/creator of the {@link Room}\n- MODERATOR: a participant with {@link Room} management Rights\n- NONE: basic participant",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/Participant.js~Participant",
    "static": false,
    "longname": "src/core/Participant.js~Participant#status",
    "access": null,
    "description": "The participant status Can be:\n- NOT_CONNECTED: the participant did not accept the invitation yet and/or did not join the {@link Room} yet\n- CONNECTED: the participant is in the {@link Room}\n- WAS_CONNECTED: the participant left the {@link Room}",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "_joined",
    "memberof": "src/core/Participant.js~Participant",
    "static": false,
    "longname": "src/core/Participant.js~Participant#_joined",
    "access": null,
    "description": "Joined date",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/core/Room.js",
    "content": "import {NONE, OPENED, CLOSED, CONNECTED, NOT_CONNECTED, WAS_CONNECTED, OWNER} from './util/constants';\nimport * as DataSync from './util/DataSync';\nimport cache from './util/cache';\nimport Participant from './Participant';\nimport Message from './Message';\nimport Local from './stream/Local';\nimport Invite from './Invite';\nimport * as Events from '../definitions/Events';\nimport * as Log from './util/Log';\nimport {REJECTED, CANCELED} from './util/constants';\n\nconst _joinRoom = (room, role) => {\n\tconst participant = {\n\t\tstatus: CONNECTED,\n\t\t_joined: DataSync.ts()\n\t};\n\tif(role) {\n\t\tparticipant.role = role;\n\t}\n\tLog.w('Room#join', [participant, `_/rooms/${room.uid}/participants/${cache.user.uid}`]);\n\treturn DataSync\n\t\t.update(`_/rooms/${room.uid}/participants/${cache.user.uid}`, participant)\n\t\t.then(() => {\n\t\t\tDataSync\n\t\t\t\t.onDisconnect(`_/rooms/${room.uid}/participants/${cache.user.uid}/status`)\n\t\t\t\t.set(WAS_CONNECTED);\n\t\t\treturn room;\n\t\t});\n};\n\n/**\n * Room information\n * @access public\n */\nexport default class Room {\n\t/**\n\t * Create a room\n\t * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n\t * @access protected\n\t */\n\tconstructor(snapData) {\n\t\tlet values = snapData;\n\t\tif(snapData && snapData.val && typeof snapData.val === 'function'){\n\t\t\tvalues = Object.assign({}, snapData.val(), {uid: snapData.name()});\n\t\t}\n\t\t/**\n\t\t * The room unique id\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = values.uid;\n\t\t/**\n\t\t * The room name\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = values.name;\n\t\t/**\n\t\t * The room owner uid\n\t\t * @type {string}\n\t\t */\n\t\tthis.owner = values.owner;\n\t\t/**\n\t\t * The room status:\n\t\t * - OPENED\n\t\t * - CLOSED\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = values.status;\n\n\t\t/**\n\t\t * Indicates that the room is public so all users can join\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._public = !!values._public;\n\n\t\t/**\n\t\t * Additional room informations\n\t\t * @type {Object}\n\t\t */\n\t\tthis.extra = values.extra;\n\n\t\t/**\n\t\t * List of declared callbacks\n\t\t * @type {Object}\n\t\t */\n\t\tthis._callbacks = {};\n\t}\n\n\t/**\n\t * Get the list of participants.\n\t * This will only work if the user is either a participant or the owner of the room.\n\t * @returns {Promise<Participant[], Error>}\n\t */\n\tparticipants() {\n\t\treturn DataSync.list(`_/rooms/${this.uid}/participants`, Participant, this.uid);\n\t}\n\n\t/**\n\t * Get the list of messages.\n\t * This will only work if the user is either a participant or the owner of the room.\n\t * @return {Promise<Message[], Error>}\n\t */\n\tmessages() {\n\t\treturn DataSync.list(`_/rooms/${this.uid}/messages`, Message, this.uid);\n\t}\n\n\t/**\n\t * Get the list of streams\n\t * @returns {Promise}\n\t * @access private\n\t */\n\t_streams(localStreams) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can list a Room\\'s streams.'));\n\t\t}\n\t\treturn DataSync.get(`_/rooms/${this.uid}/streams`)\n\t\t\t.then(snapData => {\n\t\t\t\tconst values = snapData.val();\n\t\t\t\tLog.d('Rooms~_streams', values);\n\t\t\t\tif(values) {\n\t\t\t\t\treturn Object.keys(values).map(key => Object.assign({uid: key, roomId: this.uid}, values[key]));\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then(streams => streams.filter(stream => {\n\t\t\t\treturn localStreams === (stream.device === cache.device && stream.from === cache.user.uid);\n\t\t\t}))\n\t\t\t.then(streams => streams.map(cache.streams[`get${localStreams ? 'Shared' : 'Remote'}`].bind(cache.streams)))\n\t\t\t.then(streams => streams.filter(stream => stream !== null));\n\t}\n\n\t/**\n\t * Get the list of locally published streams. The streams published with another device won't be visible here\n\t * This will only work if the user is either a participant or the owner of the room.\n\t * @return {Promise<Local[], Error>}\n\t */\n\tlocalStreams() {\n\t\treturn this._streams(true)\n\t\t\t.catch(Log.r('Room~localStreams'));\n\t}\n\n\t/**\n\t * Get the list of remotely published streams.\n\t * This will only work if the user is either a participant or the owner of the room.\n\t * @return {Promise<Remote[], Error>}\n\t */\n\tremoteStreams() {\n\t\treturn this._streams(false)\n\t\t\t.catch(Log.r('Room~remoteStreams'));\n\t}\n\n\t/**\n\t * Invite users to the room. this will only work if the current User is the owner or a moderator of this Room.\n\t * This will create the invitation and add the user to the participants list.\n\t * @param {User[]} users the users to invite\n\t * @param {string} [role='NONE'] the role of the invitee\n\t * @param {string} [message] a message to add to the invite\n\t * @return {Promise<{room: Room, invites: Invite[]}, Error>}\n\t */\n\tinvite(users, role = NONE, message) {\n\t\tconst\n\t\t\t_path = user => `_/rooms/${this.uid}/participants/${user.uid}`,\n\t\t\t_data = {\n\t\t\t\tstatus: NOT_CONNECTED,\n\t\t\t\trole: role || NONE\n\t\t\t};\n\t\t// Add users as participant so they can join the room\n\t\treturn Promise.all(users.map(user => DataSync.set(_path(user), _data)))\n\t\t\t// Send invites\n\t\t\t.then(() => Promise.all(users.map(user => Invite.send(user, this, message))))\n\t\t\t.then(invites => {\n\t\t\t\tconst removeParticipant = invite => DataSync.remove(`_/rooms/${invite.room}/participants/${invite.to}`);\n\t\t\t\tinvites.forEach(invite => {\n\t\t\t\t\tinvite.on(REJECTED, removeParticipant);\n\t\t\t\t\tinvite.on(CANCELED, removeParticipant);\n\t\t\t\t});\n\t\t\t\treturn {room: this, invites};\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tLog.e('Room~invite', e);\n\t\t\t\tusers.forEach(user => DataSync.remove(`_/rooms/${this.uid}/participants/${user.uid}`));\n\t\t\t\treturn Promise.reject(e);\n\t\t\t});\n\t}\n\n\t/**\n\t * Register a callback for a specific event\n\t * @param {string} event The event name ({@link Events/Room}):\n\t * - PARTICIPANT_ADDED: a participant is added to the room\n\t * - PARTICIPANT_CHANGED: a participant changes his status (join)\n\t * - PARTICIPANT_REMOVED: a participant leave the room\n\t * - MESSAGE_ADDED: new instant message\n\t * - MESSAGE_CHANGED: an existing message has been modified (moderation)\n\t * - MESSAGE_REMOVED: a message has been removed (moderation)\n\t * - STREAM_PUBLISHED: a participant published a new Stream\n\t * - STREAM_CHANGED: a participant changes his published Stream (moderation, type, mute...)\n\t * - STREAM_UNPUBLISHED: a participant stops the publication of his Stream\n\t * @param {function} callback The callback for the event, the arguments depends on the type of event:\n\t * - PARTICIPANT_* : callback({@link Participant} p [, Error e])\n\t * - MESSAGE_* : callback({@link Message} m [, Error e])\n\t * - STREAM_* : callback({@link Remote} s [, Error e])\n\t * @param {Webcom/api.Query~cancelCallback} cancelCallback The error callback for the event, takes an Error as only argument\n\t */\n\ton(event, callback, cancelCallback) {\n\t\tconst\n\t\t\tpath = Events.room.toPath(event)(this),\n\t\t\tobj = Events.room.toClass(event);\n\t\tif(path && obj) {\n\t\t\tconst typedCallback = snapData => {\n\t\t\t\tif(!/^STREAM_/i.test(event) || !snapData) {\n\t\t\t\t\tLog.i(`Room~on(${event})`, snapData ? new obj(snapData) : null);\n\t\t\t\t\tcallback(snapData ? new obj(snapData) : null);\n\t\t\t\t} else if(cache.user) {\n\t\t\t\t\tconst streamData = Object.assign({uid: snapData.name(), roomId: this.uid}, snapData.val());\n\t\t\t\t\tif(streamData.from !== cache.user.uid || streamData.device !== cache.device) {\n\t\t\t\t\t\tconst remoteStream = cache.streams.getRemote(streamData);\n\t\t\t\t\t\tLog.i(`Room~on(${event})`, remoteStream);\n\t\t\t\t\t\tcallback(remoteStream);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tDataSync.on(path, event, typedCallback, cancelCallback);\n\t\t\tif(!this._callbacks[event]) {\n\t\t\t\tthis._callbacks[event] = [];\n\t\t\t}\n\t\t\tthis._callbacks[event].push(typedCallback);\n\t\t}\n\t}\n\n\t/**\n\t * Send an instant message\n\t * @param {string} message The message to send\n\t * @return {Promise<Message>}\n\t */\n\tsendMessage(message) {\n\t\treturn Message.send(this, message);\n\t}\n\n\t/**\n\t * Publish a local stream\n\t * @param {string} type The stream type, see {@link StreamTypes} for possible values\n\t * @param {Element} [localStreamContainer] The element the stream is attached to. Can be null if already specified in {@link Config}.\n\t * @param {MediaStreamConstraints} [constraints] The stream constraints. If not defined, the constraints defined in {@link Config} will be used.\n\t * @returns {Promise<Local, Error>}\n\t */\n\tshare(type, localStreamContainer, constraints) {\n\t\tLog.i('Room~share', {type, localStreamContainer, constraints});\n\t\treturn Local.share(this.uid, type, localStreamContainer, constraints);\n\t}\n\n\t/**\n\t * Join the room. Sets the connected status of the current participant to CONNECTED.\n\t * @return {Promise}\n\t */\n\tjoin() {\n\t\tLog.i('Room~join', this);\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can join a Room.'));\n\t\t}\n\t\treturn _joinRoom(this).catch(Log.r('Room~join'));\n\t}\n\n\t/**\n\t * Leave the room. Sets the connected status of the current participant to WAS_CONNECTED, deletes medias and callbacks, closes WebRTC stacks in use.\n\t * @return {Promise}\n\t */\n\tleave() {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can leave a Room.'));\n\t\t}\n\t\tLog.i('Room~leave', this);\n\t\t// Cancel onDisconnect\n\t\tDataSync.onDisconnect(`_/rooms/${this.uid}/participants/${cache.user.uid}/status`).cancel();\n\n\t\t// Disconnect user's callbacks\n\t\tObject.keys(this._callbacks).forEach(event => {\n\t\t\tDataSync.off(Events.room.toPath(event)(this), event);\n\t\t});\n\t\t// Unpublish all local streams\n\t\tthis.localStreams().then(localStreams => localStreams.forEach(localStream => localStream.close()));\n\t\t// Unsubscribe all remote streams\n\t\tthis.remoteStreams().then(remoteStreams => remoteStreams.forEach(remoteStream => remoteStream.unSubscribe()));\n\t\t// Update status\n\t\treturn DataSync.set(`_/rooms/${this.uid}/participants/${cache.user.uid}/status`, WAS_CONNECTED)\n\t\t\t.catch(Log.r('Room~leave'));\n\t}\n\n\t/**\n\t * Leaves & close the Room. Only the owner/moderator can close a room.\n\t * @return {Promise}\n\t */\n\tclose() {\n\t\tLog.i('Room~close', this);\n\t\treturn this.leave()\n\t\t\t.then(() => DataSync.update(`rooms/${this.uid}`, {\n\t\t\t\tstatus: CLOSED,\n\t\t\t\t_closed: DataSync.ts()\n\t\t\t}))\n\t\t\t.then(() => DataSync.remove(`_/rooms/${this.uid}`))\n\t\t\t.catch(Log.r('Room~close'));\n\t}\n\n\t/**\n\t * Create a room\n\t * @access protected\n\t * @param {String} [name] The room name\n\t * @param {object} [extra=null] Extra informations\n\t * @param {boolean} [publicRoom=false] Indicates public room\n\t * @returns {Promise<Room, Error>}\n\t */\n\tstatic create (name, extra = null, publicRoom = false) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can create a Room.'));\n\t\t}\n\n\t\tconst\n\t\t\troomMetaData = {\n\t\t\t\towner: cache.user.uid,\n\t\t\t\t_public: publicRoom,\n\t\t\t\tname: name || `${cache.user.name}-${Date.now()}`\n\t\t\t},\n\t\t\troomFullMetaData = Object.assign({\n\t\t\t\tstatus: OPENED,\n\t\t\t\t_created: DataSync.ts(),\n\t\t\t\textra\n\t\t\t}, roomMetaData);\n\n\t\tlet room = null;\n\t\t// Create public room infos\n\t\treturn DataSync.push('rooms', roomFullMetaData)\n\t\t\t// Create private room infos\n\t\t\t.then(roomRef => {\n\t\t\t\troom = new Room(Object.assign({uid: roomRef.name()}, roomFullMetaData));\n\t\t\t\treturn DataSync.update(`_/rooms/${room.uid}/meta`, roomMetaData);\n\t\t\t})\n\t\t\t// Join the room\n\t\t\t.then(() => _joinRoom(room, OWNER))\n\t\t\t.catch(Log.r('Room#create'));\n\t}\n\n\t/**\n\t * Get a {@link Room} from its `uid`\n\t * @access protected\n\t * @param uid\n\t * @returns {Promise.<Room>}\n\t */\n\tstatic get (uid) {\n\t\treturn DataSync.get(`rooms/${uid}`)\n\t\t\t.then(snapData => {\n\t\t\t\tif(snapData.val()) {\n\t\t\t\t\treturn new Room(snapData);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "src/core/Room.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "_joinRoom",
    "memberof": "src/core/Room.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Room.js~_joinRoom",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/Room.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "room",
        "types": [
          "*"
        ]
      },
      {
        "name": "role",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "class",
    "name": "Room",
    "memberof": "src/core/Room.js",
    "static": true,
    "longname": "src/core/Room.js~Room",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/Room.js",
    "importStyle": "Room",
    "description": "Room information",
    "lineNumber": 35,
    "interface": false
  },
  {
    "__docId__": 103,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#constructor",
    "access": "protected",
    "description": "Create a room",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      }
    ]
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#uid",
    "access": null,
    "description": "The room unique id",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "name",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#name",
    "access": null,
    "description": "The room name",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "owner",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#owner",
    "access": null,
    "description": "The room owner uid",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#status",
    "access": null,
    "description": "The room status:\n- OPENED\n- CLOSED",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "_public",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#_public",
    "access": null,
    "description": "Indicates that the room is public so all users can join",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "extra",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#extra",
    "access": null,
    "description": "Additional room informations",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/core/Room.js~Room",
    "static": false,
    "longname": "src/core/Room.js~Room#_callbacks",
    "access": null,
    "description": "List of declared callbacks",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "participants",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#participants",
    "access": null,
    "description": "Get the list of participants.\nThis will only work if the user is either a participant or the owner of the room.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Participant[], Error>}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Participant[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "messages",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#messages",
    "access": null,
    "description": "Get the list of messages.\nThis will only work if the user is either a participant or the owner of the room.",
    "lineNumber": 102,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Message[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_streams",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#_streams",
    "access": "private",
    "description": "Get the list of streams",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "name": "localStreams",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "localStreams",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#localStreams",
    "access": null,
    "description": "Get the list of locally published streams. The streams published with another device won't be visible here\nThis will only work if the user is either a participant or the owner of the room.",
    "lineNumber": 136,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "remoteStreams",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#remoteStreams",
    "access": null,
    "description": "Get the list of remotely published streams.\nThis will only work if the user is either a participant or the owner of the room.",
    "lineNumber": 146,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Remote[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "invite",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#invite",
    "access": null,
    "description": "Invite users to the room. this will only work if the current User is the owner or a moderator of this Room.\nThis will create the invitation and add the user to the participants list.",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "User[]"
        ],
        "spread": false,
        "optional": false,
        "name": "users",
        "description": "the users to invite"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'NONE'",
        "defaultRaw": "'NONE'",
        "name": "role",
        "description": "the role of the invitee"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "a message to add to the invite"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{room: Room, invites: Invite[]}, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "on",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#on",
    "access": null,
    "description": "Register a callback for a specific event",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event name ({@link Events/Room}):\n- PARTICIPANT_ADDED: a participant is added to the room\n- PARTICIPANT_CHANGED: a participant changes his status (join)\n- PARTICIPANT_REMOVED: a participant leave the room\n- MESSAGE_ADDED: new instant message\n- MESSAGE_CHANGED: an existing message has been modified (moderation)\n- MESSAGE_REMOVED: a message has been removed (moderation)\n- STREAM_PUBLISHED: a participant published a new Stream\n- STREAM_CHANGED: a participant changes his published Stream (moderation, type, mute...)\n- STREAM_UNPUBLISHED: a participant stops the publication of his Stream"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for the event, the arguments depends on the type of event:\n- PARTICIPANT_* : callback({@link Participant} p [, Error e])\n- MESSAGE_* : callback({@link Message} m [, Error e])\n- STREAM_* : callback({@link Remote} s [, Error e])"
      },
      {
        "nullable": null,
        "types": [
          "Webcom/api.Query~cancelCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "cancelCallback",
        "description": "The error callback for the event, takes an Error as only argument"
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "sendMessage",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#sendMessage",
    "access": null,
    "description": "Send an instant message",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message to send"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Message>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "share",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#share",
    "access": null,
    "description": "Publish a local stream",
    "lineNumber": 245,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Local, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The stream type, see {@link StreamTypes} for possible values"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "localStreamContainer",
        "description": "The element the stream is attached to. Can be null if already specified in {@link Config}."
      },
      {
        "nullable": null,
        "types": [
          "MediaStreamConstraints"
        ],
        "spread": false,
        "optional": true,
        "name": "constraints",
        "description": "The stream constraints. If not defined, the constraints defined in {@link Config} will be used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "join",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#join",
    "access": null,
    "description": "Join the room. Sets the connected status of the current participant to CONNECTED.",
    "lineNumber": 254,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "leave",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#leave",
    "access": null,
    "description": "Leave the room. Sets the connected status of the current participant to WAS_CONNECTED, deletes medias and callbacks, closes WebRTC stacks in use.",
    "lineNumber": 266,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "close",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Room.js~Room#close",
    "access": null,
    "description": "Leaves & close the Room. Only the owner/moderator can close a room.",
    "lineNumber": 291,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "create",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Room.js~Room.create",
    "access": "protected",
    "description": "Create a room",
    "lineNumber": 310,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Room, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The room name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "extra",
        "description": "Extra informations"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "publicRoom",
        "description": "Indicates public room"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Room, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "get",
    "memberof": "src/core/Room.js~Room",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Room.js~Room.get",
    "access": "protected",
    "description": "Get a {@link Room} from its `uid`",
    "lineNumber": 346,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Room>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Room>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/core/User.js",
    "content": "import * as DataSync from './util/DataSync';\nimport cache from './util/cache';\nimport * as Log from './util/Log';\nimport Room from './Room';\nimport Device from './Device';\nimport {CONNECTED, NOT_CONNECTED} from './util/constants';\nimport Webcom from 'webcom/webcom';\n\nlet initializing = false;\n\n/**\n * User informations\n * @public\n */\nexport default class User {\n\t/**\n\t * Create a user\n\t * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n\t * @access protected\n\t */\n\tconstructor(snapData) {\n\t\tconst values = Object.assign({}, snapData.val());\n\t\t/**\n\t\t * User's unique id\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = snapData.name();\n\t\t/**\n\t\t * User's display name\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = values.name;\n\t\t/**\n\t\t * User's status\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = values.status;\n\t\t/**\n\t\t * User's last know connection ts\n\t\t * @type {number}\n\t\t */\n\t\tthis.lastSeen = values.lastSeen;\n\t\t/**\n\t\t * Indicates if the user is an anonymous user\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.anonymous = /^anonymous/.test(this.uid);\n\t\t// TODO #Feat: Add 'extra' property for unrestricted additional information ?\n\t}\n\n\t/**\n\t * Invite a user directly. This will create a new Room, log you in it & invite the user.\n\t * @param {string} [message] a message to add to the invite\n\t * @return {Promise<{room: Room, invite: Invite}, Error>}\n\t */\n\tinvite(message) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can invite another User.'));\n\t\t}\n\t\treturn Room.create(`${cache.user.uid}-${this.uid}`)\n\t\t\t.then(room => {\n\t\t\t\treturn room.invite([this], null, message);\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\treturn {room: data.room, invite: data.invites[0]};\n\t\t\t})\n\t\t\t.catch(Log.r('User~invite'));\n\t}\n\n\t/**\n\t * List Users's devices. Only for current user.\n\t * @access protected\n\t * @return {Promise<Device[], Error>}\n\t */\n\tdevices() {\n\t\treturn DataSync.list(`_/devices/${this.uid}`, Device);\n\t}\n\n\t/**\n\t * Init the current user\n\t * @access protected\n\t * @param {string} uid The user's uid\n\t * @param {string} [name] The user's display name\n\t * @returns {Promise<User, Error>}\n\t */\n\tstatic init (uid, name) {\n\t\tif(!initializing) {\n\t\t\tinitializing = true;\n\t\t\tconst d = {status: CONNECTED, lastSeen: DataSync.ts()};\n\t\t\tif(name) {\n\t\t\t\tObject.assign(d, {name});\n\t\t\t}\n\t\t\tlet deviceId = Webcom.INTERNAL.PersistentStorage.get(uid);\n\t\t\treturn DataSync.update(`users/${uid}`, d)\n\t\t\t\t// Register current device\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst deviceMetadata = {\n\t\t\t\t\t\tstatus: CONNECTED,\n\t\t\t\t\t\tsdk: {\n\t\t\t\t\t\t\treach: SDK_VERSION,\n\t\t\t\t\t\t\twebcom: Webcom.SDK_VERSION\n\t\t\t\t\t\t},\n\t\t\t\t\t\tuserAgent: navigator.userAgent\n\t\t\t\t\t};\n\t\t\t\t\tif(deviceId) {\n\t\t\t\t\t\treturn DataSync.update(`_/devices/${uid}/${deviceId}`, deviceMetadata);\n\t\t\t\t\t}\n\t\t\t\t\treturn DataSync.push(`_/devices/${uid}`, deviceMetadata);\n\t\t\t\t})\n\t\t\t\t// Save device\n\t\t\t\t.then(deviceRef => {\n\t\t\t\t\tif (!deviceId) {\n\t\t\t\t\t\tdeviceId = deviceRef.name();\n\t\t\t\t\t\tWebcom.INTERNAL.PersistentStorage.set(uid, deviceId);\n\t\t\t\t\t}\n\t\t\t\t\tcache.device = deviceId;\n\t\t\t\t})\n\t\t\t\t// Add onDisconnect actions\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Disconnect device\n\t\t\t\t\tDataSync.onDisconnect(`_/devices/${uid}/${deviceId}/status`).set(NOT_CONNECTED);\n\t\t\t\t\t// Update user status\n\t\t\t\t\tDataSync.onDisconnect(`users/${uid}`).update({\n\t\t\t\t\t\tstatus: NOT_CONNECTED,\n\t\t\t\t\t\tlastSeen: DataSync.ts()\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t// Get user\n\t\t\t\t.then(() => User.get(uid))\n\t\t\t\t.then(user => {\n\t\t\t\t\tinitializing = false;\n\t\t\t\t\treturn user;\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tLog.e(e);\n\t\t\t\t\tinitializing = false;\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t});\n\t\t}\n\t\treturn User.get(uid);\n\t}\n\n\t/**\n\t * Disconnect the current user\n\t * @access protected\n\t * @param {User} user The current user\n\t * @returns {Promise}\n\t */\n\tstatic disconnect(user) {\n\t\t// Cancel onDisconnect\n\t\tDataSync.onDisconnect(`_/devices/${user.uid}/${cache.device}/status`).cancel();\n\t\tDataSync.onDisconnect(`users/${user.uid}`).cancel();\n\n\t\tif(user.anonymous) {\n\t\t\treturn DataSync.remove(`_/devices/${user.uid}`)\n\t\t\t\t.then(() => DataSync.get(`_/invites/${user.uid}`))\n\t\t\t\t.then(invites => {\n\t\t\t\t\tconst inviteIds = [];\n\t\t\t\t\tinvites.forEach(invite => {\n\t\t\t\t\t\tinviteIds.push(invite.name());\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.all(inviteIds.map(inviteId => DataSync.remove(`_/invites/${user.uid}/${inviteId}`)));\n\t\t\t\t})\n\t\t\t\t// TODO refactor data model for invites so we can delete _/invites/${user.uid}\n\t\t\t\t// .then(() => DataSync.remove(`_/invites/${user.uid}`))\n\t\t\t\t.then(() => DataSync.remove(`users/${user.uid}`))\n\t\t\t\t.then(() => {\n\t\t\t\t\tWebcom.INTERNAL.PersistentStorage.remove(user.uid);\n\t\t\t\t})\n\t\t\t\t.catch(Log.r('User#anonymous_disconnect'));\n\t\t}\n\t\treturn DataSync.set(`_/devices/${user.uid}/${cache.device}/status`, NOT_CONNECTED)\n\t\t\t.then(() => DataSync.get(`_/devices/${user.uid}`))\n\t\t\t.then(devices => {\n\t\t\t\t// Only change user's status if no other device connected\n\t\t\t\tconst hasConnectedDevices = devices.forEach(device => {\n\t\t\t\t\treturn (new RegExp(`^${CONNECTED}$`)).test(device.val().status);\n\t\t\t\t});\n\t\t\t\tif(!hasConnectedDevices) {\n\t\t\t\t\treturn DataSync.update(`users/${user.uid}`, {status: NOT_CONNECTED});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(Log.r('User#disconnect'));\n\t}\n\n\t/**\n\t * Get a user by its uid\n\t * @access private\n\t * @param {string} uid The user's uid\n\t * @returns {Promise<User, Error>}\n\t */\n\tstatic get(uid) {\n\t\treturn DataSync.get(`users/${uid}`)\n\t\t.then(snapData => snapData ? new User(snapData) : null)\n\t\t.catch(Log.r('User#get'));\n\t}\n}\n",
    "static": true,
    "longname": "src/core/User.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "initializing",
    "memberof": "src/core/User.js",
    "static": true,
    "longname": "src/core/User.js~initializing",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "User",
    "memberof": "src/core/User.js",
    "static": true,
    "longname": "src/core/User.js~User",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/User.js",
    "importStyle": "User",
    "description": "User informations",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/User.js~User#constructor",
    "access": "protected",
    "description": "Create a user",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom/api.DataSnapshot",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "snapData",
        "description": "The data snapshot"
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/User.js~User",
    "static": false,
    "longname": "src/core/User.js~User#uid",
    "access": null,
    "description": "User's unique id",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "name",
    "memberof": "src/core/User.js~User",
    "static": false,
    "longname": "src/core/User.js~User#name",
    "access": null,
    "description": "User's display name",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/User.js~User",
    "static": false,
    "longname": "src/core/User.js~User#status",
    "access": null,
    "description": "User's status",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "lastSeen",
    "memberof": "src/core/User.js~User",
    "static": false,
    "longname": "src/core/User.js~User#lastSeen",
    "access": null,
    "description": "User's last know connection ts",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "anonymous",
    "memberof": "src/core/User.js~User",
    "static": false,
    "longname": "src/core/User.js~User#anonymous",
    "access": null,
    "description": "Indicates if the user is an anonymous user",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "invite",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/User.js~User#invite",
    "access": null,
    "description": "Invite a user directly. This will create a new Room, log you in it & invite the user.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "a message to add to the invite"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{room: Room, invite: Invite}, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "devices",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/User.js~User#devices",
    "access": "protected",
    "description": "List Users's devices. Only for current user.",
    "lineNumber": 75,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Device[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "init",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/User.js~User.init",
    "access": "protected",
    "description": "Init the current user",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "The user's uid"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The user's display name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/User.js~User.disconnect",
    "access": "protected",
    "description": "Disconnect the current user",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "The current user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "get",
    "memberof": "src/core/User.js~User",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/User.js~User.get",
    "access": "private",
    "description": "Get a user by its uid",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<User, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "The user's uid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<User, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/core/stream/Local.js",
    "content": "import StreamTypes from '../../definitions/StreamTypes';\nimport * as Log from '../util/Log';\nimport cache from '../util/cache';\nimport * as DataSync from '../util/DataSync';\nimport Media from '../util/Media';\nimport {NONE, CLOSED, CLOSING, CONNECTED} from '../util/constants';\n\nconst _facingModes = [Media.facingMode.USER, Media.facingMode.ENVIRONMENT];\n\nconst _getConstraintValue = (constraints, prop) => {\n\treturn constraints[prop].exact || constraints[prop].ideal || constraints[prop];\n};\n\nconst _setConstrainValue = (constraints, prop, other, value) => {\n\tconstraints[prop] = {exact: value};\n\tdelete constraints[other];\n};\n\n/**\n * The local stream\n */\nexport default class Local {\n\t/**\n\t * @access protected\n\t * @param {object} values\n\t */\n\tconstructor(values) {\n\t\t/**\n\t\t * The uid of the room the stream is published in\n\t\t * @type {string}\n\t\t */\n\t\tthis.roomId = values.roomId;\n\t\t/**\n\t\t * The uid of this stream\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = values.uid;\n\t\t/**\n\t\t * The type of the stream\n\t\t * @type {string}\n\t\t */\n\t\tthis.type = values.type;\n\t\t/**\n\t\t * Indicates if a track is muted\n\t\t * @type {{audio: boolean, video: boolean}}\n\t\t */\n\t\tthis.muted = Object.assign({audio: false, video: false}, values.muted);\n\t\t/**\n\t\t * The local DOM container element where the {@link Local~media} is displayed\n\t\t * @type {Element}\n\t  */\n\t\tthis.container = values.container || cache.config.localStreamContainer;\n\t\t/**\n\t  * The local DOM media element where the {@link Local~media} is displayed\n\t  * @type {Element}\n\t  */\n\t\tthis.node = null;\n\t\t/**\n\t\t * List of the PeerConnections associated to this local stream\n\t\t * @type {PeerConnection[]}\n\t\t */\n\t\tthis.peerConnections = [];\n\t\t/**\n\t\t * Local stream status\n\t\t * @type {string}\n\t\t */\n\t\tthis.status = NONE;\n\t\t/**\n\t\t * is the video is loaded int the local DOM media element\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.isVideoLoaded = false;\n\t\t/**\n\t\t * @access private\n\t\t * @type {{audio: string, video: string}}\n\t\t */\n\t\tthis._inputs = {};\n\n\t\t// Set constraints\n\t\tthis.constraints = values.constraints;\n\t}\n\n\t/**\n\t * The Media Constraints. (defaults to global config)\n\t * @param {MediaConstraints} constraints\n\t */\n\tset constraints(constraints) {\n\t\tconst\n\t\t\tvalues = constraints || cache.config.constraints,\n\t\t\tdefaultConstraints = Media.constraints();\n\t\t['audio', 'video'].forEach(type => {\n\t\t\tif(!~this.type.indexOf(type)) {\n\t\t\t\tvalues[type] = false;\n\t\t\t} else if(!values[type]){\n\t\t\t\tvalues[type] = defaultConstraints[type];\n\t\t\t}\n\t\t\tif(values[type].deviceId || values[type].facingMode) {\n\t\t\t\tthis._inputs[type] = _getConstraintValue(\n\t\t\t\t\tvalues[type],\n\t\t\t\t\tvalues[type].facingMode ? 'facingMode' : 'deviceId'\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tLog.d('Local~set#contraints', values);\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._constraints = values;\n\t}\n\n\t/**\n\t * The Media Constraints. (defaults to global config)\n\t * @type {MediaConstraints}\n\t */\n\tget constraints() {\n\t\treturn this._constraints;\n\t}\n\n\t/**\n\t * Updates the stream constraints and retrieve the new MediaStream\n\t * @param constraints\n\t * @returns {*|Promise.<TResult>}\n\t */\n\tupdateConstraints(constraints) {\n\t\tLog.d('Local~updateConstraints', constraints);\n\t\tthis.constraints = constraints;\n\t\treturn navigator.mediaDevices.getUserMedia(this.constraints)\n\t\t\t.then(media => {\n\t\t\t\t['audio', 'video'].forEach(kind => {\n\t\t\t\t\tconst constraintsValue = this.constraints[kind];\n\t\t\t\t\tif(constraintsValue) {\n\t\t\t\t\t\tif (constraintsValue.deviceId || constraintsValue.facingMode) {\n\t\t\t\t\t\t\tthis._inputs[kind] = _getConstraintValue(\n\t\t\t\t\t\t\t\tconstraintsValue,\n\t\t\t\t\t\t\t\tconstraintsValue.facingMode ? 'facingMode' : 'deviceId'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.media = media;\n\t\t\t});\n\t}\n\n\t/**\n\t * The associated MediaStream\n\t * @type {MediaStream}\n\t */\n\tset media (mediaStream) {\n\t\tif(mediaStream) {\n\t\t\tif(!(mediaStream instanceof MediaStream)) {\n\t\t\t\tthrow new Error('The media MUST be a MediaStream');\n\t\t\t}\n\n\t\t\tconst checkDevices = {};\n\t\t\tmediaStream.getTracks().forEach(track => {\n\t\t\t\t// Reset mute\n\t\t\t\ttrack.enabled = !this.muted[track.kind];\n\t\t\t\t// Get device label\n\t\t\t\tif(!this._inputs[track.kind]) {\n\t\t\t\t\tcheckDevices[track.kind] = track.label;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Try to get deviceId from label\n\t\t\tif(Object.keys(checkDevices).length) {\n\t\t\t\tMedia.devices().then(devices => {\n\t\t\t\t\tObject.keys(checkDevices).forEach(kind => {\n\t\t\t\t\t\tif(devices[`${kind}input`]){\n\t\t\t\t\t\t\tconst deviceIds = devices[`${kind}input`]\n\t\t\t\t\t\t\t\t.filter(device => device.label.length && device.label === checkDevices[kind]);\n\t\t\t\t\t\t\tif(deviceIds.length === 1 && !this._inputs[kind]) {\n\t\t\t\t\t\t\t\tthis._inputs[kind] = deviceIds[0].deviceId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Display\n\t\t\tthis.node = Media.attachStream(mediaStream, this.container, this.node, 0);\n\t\t\tthis.node.onloadeddata = () => {\n\t\t\t\tthis.isVideoLoaded = true;\n\t\t\t};\n\t\t\tthis.status = CONNECTED;\n\t\t\tLog.d('Local~set media', {mediaStream}, this.node);\n\t\t\t// Renegotiate\n\t\t\tthis.peerConnections.forEach(peerConnection => peerConnection.renegotiate(this._media, mediaStream));\n\t\t} else if(this.media && !mediaStream) {\n\t\t\t// Remove node\n\t\t\tthis.node.srcObject = null;\n\t\t\tthis.container.removeChild(this.node);\n\t\t\tthis.node = null;\n\t\t\t// Stop stream\n\t\t\tthis.media.getTracks().forEach(track => track.stop());\n\t\t\t// Close PeerConnections\n\t\t\tthis.peerConnections.forEach(peerConnection => peerConnection.close());\n\t\t}\n\t\t// Save\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._media = mediaStream;\n\t}\n\n\t/**\n\t * The associated MediaStream\n\t * @type {MediaStream}\n\t */\n\tget media () {\n\t\treturn this._media;\n\t}\n\n\t/**\n\t * Mute a track of a Stream\n\t * @param {string} [track=AUDIO] The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)\n\t * @param {boolean} [state=true] true for mute & false for un-mute\n\t * @example <caption>mute video</caption>\n\t * stream.mute(Reach.t.VIDEO)\n\t * @example <caption>mute audio</caption>\n\t * stream.mute(Reach.t.AUDIO)\n\t * // or\n\t * stream.mute()\n\t */\n\tmute(track = StreamTypes.AUDIO, state = true) {\n\t\tLog.d('mute', track, state);\n\t\tlet audio = this.muted.audio, video = this.muted.video, tracks;\n\t\tswitch (track) {\n\t\t\tcase StreamTypes.AUDIO:\n\t\t\t\taudio = state;\n\t\t\t\ttracks = this.media.getAudioTracks();\n\t\t\t\tbreak;\n\t\t\tcase StreamTypes.VIDEO:\n\t\t\tcase StreamTypes.SCREEN_SHARING:\n\t\t\t\tvideo = state;\n\t\t\t\ttracks = this.media.getVideoTracks();\n\t\t\t\tbreak;\n\t\t\tcase StreamTypes.AUDIO_VIDEO:\n\t\t\t\taudio = state;\n\t\t\t\tvideo = state;\n\t\t\t\ttracks = this.media.getTracks();\n\t\t\t\tbreak;\n\t\t}\n\t\t// Mute media tracks\n\t\ttracks.forEach(track => {track.enabled = !state;});\n\t\t// Signal subscribers\n\t\tthis.muted = {audio, video};\n\t\tDataSync.set(`_/rooms/${this.roomId}/streams/${this.uid}/muted`, this.muted);\n\t}\n\n\t/**\n\t * Un-mute a track of a Stream\n\t * @param {string} [track=AUDIO] The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)\n\t * @example <caption>Un-mute video</caption>\n\t * stream.unMute(Reach.t.VIDEO)\n\t * @example <caption>Un-mute audio</caption>\n\t * stream.unMute(Reach.t.AUDIO)\n\t * // or\n\t * stream.unMute()\n\t */\n\tunMute(track) {\n\t\tthis.mute(track, false);\n\t}\n\n\t/**\n\t * Removes stream for published list, closes associated PeerConnections and stops current MediaStream\n\t * @returns {Promise}\n\t */\n\tclose() {\n\t\tif(!~[CLOSED, CLOSING].indexOf(this.status)) {\n\t\t\tthis.status = CLOSING;\n\t\t\t// Stop listening to Subscribers\n\t\t\tconst path = `_/rooms/${this.roomId}/subscribers/${this.uid}`;\n\t\t\tDataSync.off(path, 'child_added');\n\t\t\tDataSync.off(path, 'child_removed');\n\t\t\t// Cancel onDisconnects\n\t\t\tDataSync.onDisconnect(`_/rooms/${this.roomId}/streams/${this.uid}`).cancel();\n\t\t\tDataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}`).cancel();\n\t\t\t// Remove subscribers\n\t\t\tDataSync.remove(path);\n\t\t\t// Remove stream\n\t\t\tDataSync.remove(`_/rooms/${this.roomId}/streams/${this.uid}`);\n\t\t\tthis.media = null;\n\t\t\t// Close\n\t\t\tthis.status = CLOSED;\n\t\t}\n\t\treturn Promise.resolve(this.status);\n\t}\n\n\t/**\n\t * Switch video input device\n\t * @param {string} [deviceId] A video input device Id or the `facingMode` value\n\t * @returns {Promise<Local, Error>}\n\t */\n\tswitchCamera(deviceId) {\n\t\treturn this._switchDevice(StreamTypes.VIDEO, deviceId);\n\t}\n\n\t/**\n\t * Switch audio input device\n\t * @param {string} [deviceId] A audio input device Id\n\t * @returns {Promise<Local, Error>}\n\t */\n\tswitchMicrophone(deviceId) {\n\t\treturn this._switchDevice(StreamTypes.AUDIO, deviceId);\n\t}\n\n\t/**\n\t * Switch input device\n\t * @access private\n\t * @param {string} kind The kind of device to switch\n\t * @param {string} [deviceId] An input device id\n\t * @returns {Promise<Local, Error>}\n     */\n\t_switchDevice(kind, deviceId) {\n\t\tLog.d('Local~_switchDevice', kind, deviceId);\n\t\tif(this.media.getTracks().some(track => track.kind === kind)) {\n\t\t\tlet next = Promise.resolve(deviceId);\n\t\t\tconst currentModeIdx = _facingModes.indexOf(this._inputs[kind]);\n\t\t\tif(!deviceId && !!~currentModeIdx) {\n\t\t\t\t// Loop facingModes\n\t\t\t\tnext = Promise.resolve(_facingModes[(currentModeIdx + 1) % _facingModes.length]);\n\t\t\t} else if(!~_facingModes.indexOf(deviceId)) {\n\t\t\t\t// Loop deviceIds\n\t\t\t\tnext = Media.devices()\n\t\t\t\t\t.then(d => {\n\t\t\t\t\t\t// devices IDs\n\t\t\t\t\t\tconst devices = d[`${kind}input`].map(mediaDevice => mediaDevice.deviceId);\n\t\t\t\t\t\t// Sort to ensure same order\n\t\t\t\t\t\tdevices.sort();\n\t\t\t\t\t\t// New device\n\t\t\t\t\t\tlet nextDevice = deviceId;\n\t\t\t\t\t\tif(deviceId && !devices.some(device => device === deviceId)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(`Unknown ${kind} device`));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!deviceId && devices.length > 1) {\n\t\t\t\t\t\t\tlet idx = this._inputs[kind] ? devices.findIndex(v => v === this._inputs[kind], this) : 0;\n\t\t\t\t\t\t\tnextDevice = devices[++idx % devices.length];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nextDevice;\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnext = Promise.resolve(deviceId);\n\t\t\t}\n\n\t\t\treturn next\n\t\t\t\t.then(device => {\n\t\t\t\t\tif(this._inputs[kind] !== device) {\n\t\t\t\t\t\t// Update video streams\n\t\t\t\t\t\tthis._inputs[kind] = device;\n\t\t\t\t\t\t// Stop tracks\n\t\t\t\t\t\tthis.media.getTracks().forEach(track => track.stop());\n\t\t\t\t\t\t// Update constraints\n\t\t\t\t\t\tconst constraints = Object.assign({}, this.constraints);\n\t\t\t\t\t\tlet props = ['facingMode', 'deviceId'];\n\t\t\t\t\t\tif(!~_facingModes.indexOf(device)) {\n\t\t\t\t\t\t\tprops = props.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setConstrainValue(constraints[kind], props[0], props[1], device);\n\t\t\t\t\t\tLog.d('Local~_switchDevice', kind, constraints);\n\t\t\t\t\t\treturn this.updateConstraints(constraints);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => this);\n\t\t}\n\t\treturn Promise.reject(new Error(`Current stream does not contain a ${kind} track`));\n\t}\n\t/**\n\t * Publish a local stream\n\t * @access protected\n\t * @param {string} roomId The room Id\n\t * @param {string} type The stream type, see {@link StreamTypes} for possible values\n\t * @param {?Element} container The element the stream is attached to.\n\t * @param {?MediaStreamConstraints} [constraints] The stream constraints. If not defined the constraints defined in ReachConfig will be used.\n\t * @returns {Promise<Local, Error>}\n\t */\n\tstatic share(roomId, type, container, constraints) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can share a stream.'));\n\t\t}\n\t\tconst streamMetaData = {\n\t\t\t\tfrom: cache.user.uid,\n\t\t\t\tdevice: cache.device,\n\t\t\t\ttype\n\t\t\t},\n\t\t\tsharedStream = new Local(Object.assign({roomId, constraints, container}, streamMetaData));\n\t\tLog.d('Local~share', {sharedStream});\n\t\treturn navigator.mediaDevices.getUserMedia(sharedStream.constraints)\n\t\t\t.then(media => {\n\t\t\t\tsharedStream.media = media;\n\t\t\t})\n\t\t\t// Got MediaStream, publish it\n\t\t\t.then(() => DataSync.push(`_/rooms/${roomId}/streams`, streamMetaData))\n\t\t\t.then(streamRef => {\n\t\t\t\tsharedStream.uid = streamRef.name();\n\t\t\t\tif (sharedStream.isVideoLoaded) {\n\t\t\t\t\tconst streamSize = {\n\t\t\t\t\t\theight: sharedStream.node.videoHeight,\n\t\t\t\t\t\twidth: sharedStream.node.videoWidth,\n\t\t\t\t\t};\n\t\t\t\t\tstreamRef.update(streamSize);\n\t\t\t\t} else {\n\t\t\t\t\tsharedStream.node.onloadeddata = function() {\n\t\t\t\t\t\tconst streamSize = {\n\t\t\t\t\t\t\theight: sharedStream.node.videoHeight,\n\t\t\t\t\t\t\twidth: sharedStream.node.videoWidth,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tstreamRef.update(streamSize);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\twindow.addEventListener('resize', (() => {\n\t\t\t\t\tif (sharedStream.node != null) {\n\t\t\t\t\t\tconst streamSize = {\n\t\t\t\t\t\t\theight: sharedStream.node.videoHeight,\n\t\t\t\t\t\t\twidth: sharedStream.node.videoWidth,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tstreamRef.update(streamSize);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\t// Save sharedStream\n\t\t\t\tcache.streams.shared[sharedStream.uid] = sharedStream;\n\t\t\t\t// Remove shared stream on Disconnect\n\t\t\t\tDataSync.onDisconnect(`_/rooms/${roomId}/streams/${sharedStream.uid}`).remove();\n\t\t\t\t// Remove shared stream on Disconnect\n\t\t\t\tDataSync.onDisconnect(`_/rooms/${roomId}/subscribers/${sharedStream.uid}`).remove();\n\t\t\t\t// Start listening to subscribers\n\t\t\t\tconst\n\t\t\t\t\tpath = `_/rooms/${sharedStream.roomId}/subscribers/${sharedStream.uid}`,\n\t\t\t\t\tvalue = snapData => Object.assign({device: snapData.name()}, snapData.val() || {});\n\t\t\t\tDataSync.on(path, 'child_added',\n\t\t\t\t\tsnapData => {\n\t\t\t\t\t\tconst subscriber = value(snapData);\n\t\t\t\t\t\tLog.d('Local~subscribed', subscriber);\n\t\t\t\t\t\tcache.peerConnections.offer(sharedStream, subscriber)\n\t\t\t\t\t\t\t.then(pc => sharedStream.peerConnections.push(pc));\n\t\t\t\t\t},\n\t\t\t\t\tLog.e.bind(Log)\n\t\t\t\t);\n\t\t\t\tDataSync.on(path, 'child_removed',\n\t\t\t\t\tsnapData => {\n\t\t\t\t\t\tconst subscriber = value(snapData);\n\t\t\t\t\t\tLog.d('Local~un-subscribed', subscriber);\n\t\t\t\t\t\tconst closedPC = cache.peerConnections.close(sharedStream.uid, subscriber.device);\n\t\t\t\t\t\tsharedStream.peerConnections = sharedStream.peerConnections.filter(pc => pc !== closedPC);\n\t\t\t\t\t},\n\t\t\t\t\tLog.e.bind(Log)\n\t\t\t\t);\n\t\t\t\tLog.d('Local~shared', {sharedStream});\n\t\t\t\treturn sharedStream;\n\t\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "src/core/stream/Local.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "_facingModes",
    "memberof": "src/core/stream/Local.js",
    "static": true,
    "longname": "src/core/stream/Local.js~_facingModes",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/stream/Local.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "_getConstraintValue",
    "memberof": "src/core/stream/Local.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/stream/Local.js~_getConstraintValue",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/stream/Local.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "constraints",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "_setConstrainValue",
    "memberof": "src/core/stream/Local.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/stream/Local.js~_setConstrainValue",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/stream/Local.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "constraints",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "other",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "class",
    "name": "Local",
    "memberof": "src/core/stream/Local.js",
    "static": true,
    "longname": "src/core/stream/Local.js~Local",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/core/stream/Local.js",
    "importStyle": "Local",
    "description": "The local stream",
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#constructor",
    "access": "protected",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "roomId",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#roomId",
    "access": null,
    "description": "The uid of the room the stream is published in",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#uid",
    "access": null,
    "description": "The uid of this stream",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "type",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#type",
    "access": null,
    "description": "The type of the stream",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "muted",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#muted",
    "access": null,
    "description": "Indicates if a track is muted",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "{audio: boolean, video: boolean}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "container",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#container",
    "access": null,
    "description": "The local DOM container element where the {@link Local~media} is displayed",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#node",
    "access": null,
    "description": "The local DOM media element where the {@link Local~media} is displayed",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "peerConnections",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#peerConnections",
    "access": null,
    "description": "List of the PeerConnections associated to this local stream",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "PeerConnection[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#status",
    "access": null,
    "description": "Local stream status",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "isVideoLoaded",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#isVideoLoaded",
    "access": null,
    "description": "is the video is loaded int the local DOM media element",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "_inputs",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#_inputs",
    "access": "private",
    "description": "",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "{audio: string, video: string}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "constraints",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#constraints",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "set",
    "name": "constraints",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#constraints",
    "access": null,
    "description": "The Media Constraints. (defaults to global config)",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaConstraints"
        ],
        "spread": false,
        "optional": false,
        "name": "constraints",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "_constraints",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#_constraints",
    "access": null,
    "description": "",
    "lineNumber": 108,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "get",
    "name": "constraints",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#constraints",
    "access": null,
    "description": "The Media Constraints. (defaults to global config)",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "MediaConstraints"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "updateConstraints",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#updateConstraints",
    "access": null,
    "description": "Updates the stream constraints and retrieve the new MediaStream",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|Promise.<TResult>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "constraints",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "Promise.<TResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "constraints",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#constraints",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "media",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#media",
    "access": null,
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "set",
    "name": "media",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#media",
    "access": null,
    "description": "The associated MediaStream",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "MediaStream"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#node",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "isVideoLoaded",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#isVideoLoaded",
    "access": null,
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#status",
    "access": null,
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#node",
    "access": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "_media",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#_media",
    "access": null,
    "description": "",
    "lineNumber": 200,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "get",
    "name": "media",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#media",
    "access": null,
    "description": "The associated MediaStream",
    "lineNumber": 207,
    "type": {
      "nullable": null,
      "types": [
        "MediaStream"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "mute",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#mute",
    "access": null,
    "description": "Mute a track of a Stream",
    "examples": [
      "<caption>mute video</caption>\nstream.mute(Reach.t.VIDEO)",
      "<caption>mute audio</caption>\nstream.mute(Reach.t.AUDIO)\n// or\nstream.mute()"
    ],
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "AUDIO",
        "defaultRaw": "AUDIO",
        "name": "track",
        "description": "The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "state",
        "description": "true for mute & false for un-mute"
      }
    ]
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "muted",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#muted",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"audio\": *, \"video\": *}"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "unMute",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#unMute",
    "access": null,
    "description": "Un-mute a track of a Stream",
    "examples": [
      "<caption>Un-mute video</caption>\nstream.unMute(Reach.t.VIDEO)",
      "<caption>Un-mute audio</caption>\nstream.unMute(Reach.t.AUDIO)\n// or\nstream.unMute()"
    ],
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "AUDIO",
        "defaultRaw": "AUDIO",
        "name": "track",
        "description": "The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)"
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "close",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#close",
    "access": null,
    "description": "Removes stream for published list, closes associated PeerConnections and stops current MediaStream",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#status",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "media",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#media",
    "access": null,
    "description": null,
    "lineNumber": 280,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "status",
    "memberof": "src/core/stream/Local.js~Local",
    "static": false,
    "longname": "src/core/stream/Local.js~Local#status",
    "access": null,
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "switchCamera",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#switchCamera",
    "access": null,
    "description": "Switch video input device",
    "lineNumber": 292,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Local, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "deviceId",
        "description": "A video input device Id or the `facingMode` value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "switchMicrophone",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#switchMicrophone",
    "access": null,
    "description": "Switch audio input device",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Local, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "deviceId",
        "description": "A audio input device Id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "_switchDevice",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Local.js~Local#_switchDevice",
    "access": "private",
    "description": "Switch input device",
    "lineNumber": 312,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Local, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "kind",
        "description": "The kind of device to switch"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "deviceId",
        "description": "An input device id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "share",
    "memberof": "src/core/stream/Local.js~Local",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/stream/Local.js~Local.share",
    "access": "protected",
    "description": "Publish a local stream",
    "lineNumber": 374,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Local, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "roomId",
        "description": "The room Id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The stream type, see {@link StreamTypes} for possible values"
      },
      {
        "nullable": true,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "The element the stream is attached to."
      },
      {
        "nullable": true,
        "types": [
          "MediaStreamConstraints"
        ],
        "spread": false,
        "optional": true,
        "name": "constraints",
        "description": "The stream constraints. If not defined the constraints defined in ReachConfig will be used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Local, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "src/core/stream/Remote.js",
    "content": "import cache from '../util/cache';\nimport * as DataSync from '../util/DataSync';\nimport * as Log from '../util/Log';\nimport * as Events from '../../definitions/Events';\n\n/**\n * A published Stream\n * @public\n */\nexport default class Remote {\n\t/**\n\t * @access protected\n\t * @param {object} values\n\t */\n\tconstructor(values) {\n\t\tLog.d('Remote~new', values);\n\t\t/**\n\t\t * The uid of the room the stream is published in\n\t\t * @type {string}\n\t\t */\n\t\tthis.roomId = values.roomId;\n\t\t/**\n\t\t * The uid of this stream\n\t\t * @type {string}\n\t\t */\n\t\tthis.uid = values.uid;\n\t\t/**\n\t\t * The uid of the publisher of the stream\n\t\t * @type {string}\n\t\t */\n\t\tthis.from = values.from;\n\t\t/**\n\t\t * The type of the stream\n\t\t * @type {string}\n\t\t */\n\t\tthis.type = values.type;\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tthis.device = values.device;\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tthis.height = values.height;\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tthis.width = values.width;\n\t\t/**\n\t\t * The local DOM container element where the {@link Local~media} is displayed\n\t\t * @type {Element}\n\t\t */\n\t\tthis.container = cache.config.remoteStreamContainer;\n\t\t/**\n\t\t * @type {{audio: boolean, video: boolean}}\n\t\t */\n\t\tthis.muted = Object.assign({audio: false, video: false}, values.muted);\n\t\t/**\n\t\t * List of callbacks for mute status change\n\t\t * @type {{MUTE: function[]}}\n\t\t * @private\n\t\t */\n\t\tthis._callbacks = {};\n\t\t/**\n\t\t * PeerConnections associated to this remote stream\n\t\t * @type {PeerConnection}\n\t\t */\n\t\tthis.peerConnection = null;\n\t}\n\n\t/**\n\t * DOM element where the MediaStream is displayed\n\t * @returns {Element}\n\t */\n\tget node() {\n\t\treturn this.peerConnection ? this.peerConnection.node : null;\n\t}\n\n\t/**\n\t * Subscribe to the stream\n\t * @param {Element} [remoteStreamContainer] The element the stream is attached to. Can be null if already specified in ReachConfig.\n\t * @returns {Promise}\n\t */\n\tsubscribe(remoteStreamContainer) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can subscribe to a Room\\'s stream.'));\n\t\t}\n\t\t// TODO: Test if not already subscribed ?\n\t\tthis.container = remoteStreamContainer || cache.config.remoteStreamContainer;\n\t\tLog.d('Remote~subscribe', this.container);\n\t\treturn cache.peerConnections.answer(this, this.container)\n\t\t\t.then(pc => {this.peerConnection = pc;})\n\t\t\t.then(() => DataSync.update(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`, {\n\t\t\t\tto: cache.user.uid,\n\t\t\t\t_created: DataSync.ts()\n\t\t\t}))\n\t\t\t.then(() => {\n\t\t\t\tDataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`).remove();\n\t\t\t\tlet subscribed = false;\n\t\t\t\tDataSync.on(`_/rooms/${this.roomId}/streams/${this.uid}`, 'value', snapData => {\n\t\t\t\t\tconst values = snapData.val();\n\t\t\t\t\tLog.d('Remote~updated', values);\n\t\t\t\t\tif(values) {\n\t\t\t\t\t\t// Update type\n\t\t\t\t\t\tthis.type = values.type;\n\t\t\t\t\t\t//update stream size\n\t\t\t\t\t\tconst height = values.height;\n\t\t\t\t\t\tconst width = values.width;\n\t\t\t\t\t\tif((height || width) && (height !== this.height || width !== this.height)) {\n\t\t\t\t\t\t\tthis.height = values.height;\n\t\t\t\t\t\t\tthis.width = values.width;\n\t\t\t\t\t\t\tLog.w(this._callbacks[Events.stream.SIZE]);\n\t\t\t\t\t\t\t(this._callbacks[Events.stream.SIZE] || []).forEach(cb => cb(this.height, this.width));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Update mute status\n\t\t\t\t\t\tconst muted = values.muted;\n\t\t\t\t\t\tif(muted && (muted.audio !== this.muted.audio || muted.video !== this.muted.video)) {\n\t\t\t\t\t\t\tthis.muted = muted;\n\t\t\t\t\t\t\tLog.w(this._callbacks[Events.stream.MUTE]);\n\t\t\t\t\t\t\t(this._callbacks[Events.stream.MUTE] || []).forEach(cb => cb(this.muted));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubscribed = true;\n\t\t\t\t\t} else if(subscribed) {\n\t\t\t\t\t\tLog.i('Remote#removed', this);\n\t\t\t\t\t\tthis._close(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(Log.r('Remote~subscribe'));\n\t}\n\n\t/**\n\t * Unsubscribe from the stream\n\t * @returns {Promise}\n\t */\n\tunSubscribe() {\n\t\treturn this._close(false);\n\t}\n\n\t/**\n\t * Close the remote Stream\n\t * @param {boolean} remote Close is initiated by publisher\n\t * @returns {*}\n\t * @private\n\t */\n\t_close(remote) {\n\t\t// Cancel onDisconnect\n\t\tDataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`).cancel();\n\t\t// Stop listening to stream modifications\n\t\tDataSync.off(`_/rooms/${this.roomId}/streams/${this.uid}`, 'value');\n\t\t// Un-subscribe\n\t\t!remote && DataSync.remove(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`);\n\t\t// Close PeerConnection\n\t\treturn Promise.resolve(cache.peerConnections.close(this.uid, this.device));\n\t}\n\n\t/**\n\t * Register a callback for a specific event\n\t * @param {string} event The event name ({@link Events/Stream})\n\t * @param {function} callback The callback for the event\n\t */\n\ton(event, callback) {\n\t\tif(Events.stream.supports(event)) {\n\t\t\tif(!this._callbacks[event]) {\n\t\t\t\tthis._callbacks[event] = [];\n\t\t\t}\n\t\t\tthis._callbacks[event].push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Register a callback for a specific event\n\t * @param {string} [event] The event name ({@link Events/Stream})\n\t * @param {function} [callback] The callback for the event\n\t */\n\toff(event, callback) {\n\t\tif(!event) {\n\t\t\tthis._callbacks = {};\n\t\t} else if(Events.stream.supports(event)) {\n\t\t\tif(!callback) {\n\t\t\t\tthis._callbacks[event] = [];\n\t\t\t} else {\n\t\t\t\tthis._callbacks[event] = this._callbacks[event].filter(cb => cb !== callback);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @access protected\n\t * @param {object} values\n\t */\n\tupdate(values) {\n\t\tObject.keys(values).forEach(key => {this[key] = values[key];});\n\t}\n}\n",
    "static": true,
    "longname": "src/core/stream/Remote.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "class",
    "name": "Remote",
    "memberof": "src/core/stream/Remote.js",
    "static": true,
    "longname": "src/core/stream/Remote.js~Remote",
    "access": "public",
    "export": true,
    "importPath": "webcom-reach/src/core/stream/Remote.js",
    "importStyle": "Remote",
    "description": "A published Stream",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 182,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#constructor",
    "access": "protected",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "roomId",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#roomId",
    "access": null,
    "description": "The uid of the room the stream is published in",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "uid",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#uid",
    "access": null,
    "description": "The uid of this stream",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "from",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#from",
    "access": null,
    "description": "The uid of the publisher of the stream",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "type",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#type",
    "access": null,
    "description": "The type of the stream",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "device",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#device",
    "access": null,
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "height",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#height",
    "access": null,
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "width",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#width",
    "access": null,
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "container",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#container",
    "access": null,
    "description": "The local DOM container element where the {@link Local~media} is displayed",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "muted",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#muted",
    "access": null,
    "description": "",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "{audio: boolean, video: boolean}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#_callbacks",
    "access": "private",
    "description": "List of callbacks for mute status change",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "{MUTE: function[]}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "peerConnection",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#peerConnection",
    "access": null,
    "description": "PeerConnections associated to this remote stream",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "PeerConnection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "node",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#node",
    "access": null,
    "description": "DOM element where the MediaStream is displayed",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#subscribe",
    "access": null,
    "description": "Subscribe to the stream",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "remoteStreamContainer",
        "description": "The element the stream is attached to. Can be null if already specified in ReachConfig."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "container",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#container",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "peerConnection",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#peerConnection",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "type",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#type",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "height",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#height",
    "access": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "width",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#width",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "muted",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#muted",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "unSubscribe",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#unSubscribe",
    "access": null,
    "description": "Unsubscribe from the stream",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "_close",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#_close",
    "access": "private",
    "description": "Close the remote Stream",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "remote",
        "description": "Close is initiated by publisher"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "on",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#on",
    "access": null,
    "description": "Register a callback for a specific event",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event name ({@link Events/Stream})"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for the event"
      }
    ]
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "off",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#off",
    "access": null,
    "description": "Register a callback for a specific event",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "The event name ({@link Events/Stream})"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "The callback for the event"
      }
    ]
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "_callbacks",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#_callbacks",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "update",
    "memberof": "src/core/stream/Remote.js~Remote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#update",
    "access": "protected",
    "description": "",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/core/stream/Remote.js~Remote",
    "static": false,
    "longname": "src/core/stream/Remote.js~Remote#[key]",
    "access": null,
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "src/core/stream/StreamManager.js",
    "content": "import Remote from './Remote';\n\n/**\n * @access protected\n */\nexport default class StreamManager {\n\t/**\n\t * Constructor\n\t * @access protected\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Shared local streams\n\t\t * @type {{*: Local}}\n\t\t */\n\t\tthis.shared = {};\n\t\t/**\n\t\t * Subscribed remote streams\n\t\t * @type {{*: Remote}}\n\t\t */\n\t\tthis.remote = {};\n\t}\n\n\t/**\n\t * Get a Remote stream reference\n\t * @param {object} streamData\n\t * @returns {Remote}\n\t */\n\tgetRemote(streamData) {\n\t\tlet remoteStream = this.remote[streamData.uid];\n\t\tif(remoteStream) {\n\t\t\tremoteStream.update(streamData);\n\t\t} else {\n\t\t\tthis.remote[streamData.uid] = remoteStream = new Remote(streamData);\n\t\t}\n\t\treturn remoteStream;\n\t}\n\n\t/**\n\t * Get a Remote stream reference\n\t * @param {object} streamData\n\t * @returns {Remote}\n\t */\n\tgetShared(streamData) {\n\t\t// TODO: If it does not exists locally as it should, maybe we should remove it ?\n\t\treturn this.shared[streamData.uid];\n\t}\n\n}\n",
    "static": true,
    "longname": "src/core/stream/StreamManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "class",
    "name": "StreamManager",
    "memberof": "src/core/stream/StreamManager.js",
    "static": true,
    "longname": "src/core/stream/StreamManager.js~StreamManager",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/stream/StreamManager.js",
    "importStyle": "StreamManager",
    "description": "",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 211,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/stream/StreamManager.js~StreamManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/StreamManager.js~StreamManager#constructor",
    "access": "protected",
    "description": "Constructor",
    "lineNumber": 11,
    "params": []
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "shared",
    "memberof": "src/core/stream/StreamManager.js~StreamManager",
    "static": false,
    "longname": "src/core/stream/StreamManager.js~StreamManager#shared",
    "access": null,
    "description": "Shared local streams",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "{*: Local}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "remote",
    "memberof": "src/core/stream/StreamManager.js~StreamManager",
    "static": false,
    "longname": "src/core/stream/StreamManager.js~StreamManager#remote",
    "access": null,
    "description": "Subscribed remote streams",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "{*: Remote}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "getRemote",
    "memberof": "src/core/stream/StreamManager.js~StreamManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/StreamManager.js~StreamManager#getRemote",
    "access": null,
    "description": "Get a Remote stream reference",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Remote}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "streamData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Remote"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "getShared",
    "memberof": "src/core/stream/StreamManager.js~StreamManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream/StreamManager.js~StreamManager#getShared",
    "access": null,
    "description": "Get a Remote stream reference",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Remote}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "streamData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Remote"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/core/util/DataSync.js",
    "content": "import cache from './cache';\n\n/**\n * Get the event string for Webcom from Reach events\n * @access protected\n * @param {string} event A Reach event\n * @return {string}\n */\nexport const eventType = (event) => {\n\tlet evt;\n\tif((/_ADDED$/i).test(event) || /_PUBLISHED$/.test(event)) {\n\t\tevt = 'added';\n\t} else if(/_CHANGED$/.test(event) || /_REFRESHED$/.test(event)) {\n\t\tevt = 'changed';\n\t} else if(/_REMOVED$/.test(event) || /_UNPUBLISHED$/.test(event)) {\n\t\tevt = 'removed';\n\t}\n\treturn evt ? `child_${evt}` : event;\n};\n\n/**\n * Write method\n * @param {string} method Write method (set,update)\n * @param {string} path The path to set\n * @param {object} data The data to set\n * @ignore\n */\nconst _write = (method, path, data) => new Promise((resolve, reject) => {\n\tcache.base.child(path)[method](data, error => error ? reject(error) : resolve());\n});\n\n/**\n * {@link Webcom#set} as a {@link Promise}\n * @access protected\n * @param {string} path The path to set\n * @param {object} data The data to set\n * @return {Promise<*, Error>}\n */\nexport const set = _write.bind(undefined, 'set');\n\n/**\n * {@link Webcom#push} as a {@link Promise}\n * @access protected\n * @param {string} path The path to push\n * @param {object} data The data to push\n * @return {Promise<Webcom, Error>}\n */\nexport const push = (path, data) => new Promise((resolve, reject) => {\n\tconst pushRef = cache.base.child(path).push(data, error => error ? reject(error) : resolve(pushRef));\n});\n\n/**\n * {@link Webcom#update} as a {@link Promise}\n * @access protected\n * @param {string} path The path to update\n * @param {object} data The data to update\n * @return {Promise<*, Error>}\n */\nexport const update = _write.bind(undefined, 'update');\n\n/**\n * {@link Webcom#remove} as a {@link Promise}\n * @access protected\n * @param {string} path The path to remove\n * @return {Promise<*, Error>}\n */\nexport const remove = (path) => new Promise((resolve, reject) => {\n\tcache.base.child(path).remove(error => error ? reject(error) : resolve());\n});\n\n/**\n * {@link Webcom#once} shortcut as a {@link Promise}\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @returns {Promise<Webcom/api.DataSnapshot, Error>}\n */\nexport const once = (path, event) => new Promise((resolve, reject) => {\n\tcache.base.child(path).once(eventType(event), resolve, reject);\n});\n\n/**\n * {@link Webcom#once}('value') as a {@link Promise}\n * @access protected\n * @param {string} path The path to get\n * @return {Promise<Webcom/api.DataSnapshot, Error>}\n */\nexport const get = path => once(path, 'value');\n\n/**\n * List values as a {@link Promise}\n * @access protected\n * @param {string} path The path to get\n * @param {function} Type The type of the object to list\n * @param params Additional constructor parameters\n * @return {Promise<Object[], Error>}\n */\nexport const list = (path, Type, ...params) => {\n\treturn get(path).then(snapData => {\n\t\tif(snapData) {\n\t\t\tconst values = [];\n\t\t\tsnapData.forEach(snapChild => {\n\t\t\t\tvalues.push(new Type(snapChild, ...params));\n\t\t\t});\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n/**\n * {@link Webcom#on} shortcut\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @param {Webcom/api.Query~queryCallback|function} queryCallback The callback\n * @param {Webcom/api.Query~cancelCallback|function} [cancelCallback] The callback\n */\nexport const on = (path, event, queryCallback, cancelCallback) => {\n\tcache.base.child(path).on(eventType(event), queryCallback, cancelCallback);\n};\n\n/**\n * {@link Webcom#off} shortcut\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @param {function} [callback] The callback\n */\nexport const off = (path, event, callback) => {\n\tcache.base.child(path).off(eventType(event), callback);\n};\n\n/**\n * {@link Webcom#onDisconnect} shortcut\n * @access protected\n * @param {string} path The path\n * @return {Webcom/api.OnDisconnect}\n */\nexport const onDisconnect = path => cache.base.child(path).onDisconnect();\n\n/**\n * Timestamp value\n * @access protected\n * @type {function}\n */\n// export const ts = () => Webcom.ServerValue.TIMESTAMP;\nexport const ts = () => Date.now();\n// HACK #DataSync: Rollback when TIMESTAMP works again (server-side bug with security rules)\n",
    "static": true,
    "longname": "src/core/util/DataSync.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "eventType",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~eventType",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{eventType}",
    "description": "Get the event string for Webcom from Reach events",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "A Reach event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "_write",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~_write",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": null,
    "description": "Write method",
    "lineNumber": 28,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "Write method (set,update)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to set"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to set"
      }
    ]
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "name": "set",
    "memberof": "src/core/util/DataSync.js",
    "static": true,
    "longname": "src/core/util/DataSync.js~set",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{set}",
    "description": "{@link Webcom#set} as a {@link Promise}",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to set"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<*, Error>"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "push",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~push",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{push}",
    "description": "{@link Webcom#push} as a {@link Promise}",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to push"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to push"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Webcom, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "name": "update",
    "memberof": "src/core/util/DataSync.js",
    "static": true,
    "longname": "src/core/util/DataSync.js~update",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{update}",
    "description": "{@link Webcom#update} as a {@link Promise}",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to update"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<*, Error>"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "remove",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~remove",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{remove}",
    "description": "{@link Webcom#remove} as a {@link Promise}",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<*, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "once",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~once",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{once}",
    "description": "{@link Webcom#once} shortcut as a {@link Promise}",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Webcom/api.DataSnapshot, Error>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Webcom/api.DataSnapshot, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "get",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~get",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{get}",
    "description": "{@link Webcom#once}('value') as a {@link Promise}",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to get"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Webcom/api.DataSnapshot, Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "list",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~list",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{list}",
    "description": "List values as a {@link Promise}",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to get"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "Type",
        "description": "The type of the object to list"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Additional constructor parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object[], Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "on",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~on",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{on}",
    "description": "{@link Webcom#on} shortcut",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event"
      },
      {
        "nullable": null,
        "types": [
          "Webcom/api.Query~queryCallback",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "queryCallback",
        "description": "The callback"
      },
      {
        "nullable": null,
        "types": [
          "Webcom/api.Query~cancelCallback",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "cancelCallback",
        "description": "The callback"
      }
    ]
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "off",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~off",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{off}",
    "description": "{@link Webcom#off} shortcut",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "The callback"
      }
    ]
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "onDisconnect",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~onDisconnect",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{onDisconnect}",
    "description": "{@link Webcom#onDisconnect} shortcut",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Webcom/api.OnDisconnect"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "ts",
    "memberof": "src/core/util/DataSync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/DataSync.js~ts",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/DataSync.js",
    "importStyle": "{ts}",
    "description": "Timestamp value",
    "lineNumber": 147,
    "params": [],
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/core/util/Log.js",
    "content": "import cache from './cache';\n\n/**\n * List of possible log levels\n * @access private\n * @type {string[]}\n */\nconst levels = ['DEBUG', 'INFO', 'WARN', 'ERROR'];\n/**\n * Is log enabled for a specific level\n * @access private\n * @param {string} level The level to test\n * @returns {boolean}\n */\nconst isEnabled = level => {\n\treturn levels.indexOf(level.toUpperCase()) >= levels.indexOf(cache.logLevel.toUpperCase());\n};\n/**\n * Global Console. (to avoid drop_console...)\n * @access private\n * @type {Console}\n */\nconst gConsole = global['console'];\n/**\n * Shorthand for console call\n * @access private\n * @param {string} method A method of the console object\n * @param {string} level The log level\n * @param {*} messages the log content\n */\nconst logger = (method, level, ...messages) => {\n\tisEnabled(level) ? gConsole[method.toLowerCase()].bind(gConsole)(...messages) : () => {};\n};\n/**\n * Use a group to log\n * @access private\n * @param {string} level The log level\n * @param {string} message The group title\n * @param {*} items the log content\n */\nconst group = (level, message, ...items) => {\n\tif (items.length > 0) {\n\t\tlogger.bind(undefined, gConsole.group ? 'group' : level, level)(typeof message === 'string' ? message : '');\n\t\tlet values = (typeof message !== 'string' ? [message] : []).concat(items);\n\t\tif (items.length === 1 && items[0] instanceof Array && typeof items[0].length !== undefined) {\n\t\t\tvalues = items[0];\n\t\t}\n\t\tvalues.forEach(item => logger.bind(undefined, level, level)(item));\n\t\tgConsole.groupEnd && gConsole.groupEnd();\n\t} else {\n\t\tlogger.bind(undefined, level, level, message);\n\t}\n};\n\n/**\n * Log debug messages if log level is set to DEBUG.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/log\n */\nexport const d = group.bind(undefined, levels[0]);\n/**\n * Log information messages if log level is set to DEBUG or INFO.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/info\n */\nexport const i = group.bind(undefined, levels[1]);\n/**\n * Log warning messages if log level is set to DEBUG, INFO or WARN.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/warn\n */\nexport const w = group.bind(undefined, levels[2]);\n/**\n * Log error messages. Errors are always logged.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/error\n */\nexport const e = gConsole.error.bind(gConsole);\n/**\n * Promise rejection logger to use with catch\n * @access protected\n * @param {string} message\n * @returns {function}\n */\nexport const r = message => reason => {\n\td(message, reason);\n\treturn Promise.reject(reason || message);\n};\n",
    "static": true,
    "longname": "src/core/util/Log.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "name": "levels",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~levels",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": null,
    "description": "List of possible log levels",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "isEnabled",
    "memberof": "src/core/util/Log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Log.js~isEnabled",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": null,
    "description": "Is log enabled for a specific level",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The level to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "gConsole",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~gConsole",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": null,
    "description": "Global Console. (to avoid drop_console...)",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Console"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "logger",
    "memberof": "src/core/util/Log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Log.js~logger",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": null,
    "description": "Shorthand for console call",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "A method of the console object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The log level"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "messages",
        "description": "the log content"
      }
    ]
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "group",
    "memberof": "src/core/util/Log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Log.js~group",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": null,
    "description": "Use a group to log",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The log level"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The group title"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "the log content"
      }
    ]
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "d",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~d",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": "{d}",
    "description": "Log debug messages if log level is set to DEBUG.",
    "see": [
      "https://developer.mozilla.org/fr/docs/Web/API/Console/log"
    ],
    "lineNumber": 60,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "i",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~i",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": "{i}",
    "description": "Log information messages if log level is set to DEBUG or INFO.",
    "see": [
      "https://developer.mozilla.org/fr/docs/Web/API/Console/info"
    ],
    "lineNumber": 66,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "w",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~w",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": "{w}",
    "description": "Log warning messages if log level is set to DEBUG, INFO or WARN.",
    "see": [
      "https://developer.mozilla.org/fr/docs/Web/API/Console/warn"
    ],
    "lineNumber": 72,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "e",
    "memberof": "src/core/util/Log.js",
    "static": true,
    "longname": "src/core/util/Log.js~e",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": "{e}",
    "description": "Log error messages. Errors are always logged.",
    "see": [
      "https://developer.mozilla.org/fr/docs/Web/API/Console/error"
    ],
    "lineNumber": 78,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "r",
    "memberof": "src/core/util/Log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Log.js~r",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/Log.js",
    "importStyle": "{r}",
    "description": "Promise rejection logger to use with catch",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/core/util/Media.js",
    "content": "/*eslint max-params: [2, 5], max-len: [0, 120] */\nimport * as Log from './Log';\nimport Reach from '../../Reach';\n\n/**\n * Video resolution presets\n * @access private\n * @type {{UHD: {w: number, h: number, min: string}, FHD: {w: number, h: number, min: string, max: string}, HD: {w: number, h: number, min: string, max: string}, SVGA: {w: number, h: number, min: string, max: string}, SD: {w: number, h: number, min: string, max: string}, VGA: {w: number, h: number, max: string}}}\n */\nconst presets = {\n\tUHD: {w: 3840, h: 2160, min: 'HD'},\n\tFHD: {w: 1920, h: 1080, min: 'HD', max: 'UHD'},\n\tHD: {w: 1280, h: 720, min: 'SD', max: 'FHD'},\n\tSVGA: {w: 800, h: 600, min: 'VGA', max: 'HD'},\n\tSD: {w: 720, h: 576, min: 'VGA', max: 'HD'},\n\tVGA: {w: 640, h: 480, max: 'SVGA'}\n};\n\n/**\n * Assign deviceId to constraint\n * @param constraint\n * @param deviceId\n * @returns {*}\n */\nconst _assignDevice = (constraint, deviceId) => {\n\tif(constraint && deviceId) {\n\t\treturn Object.assign(\n\t\t\t/^((user)|(environment))$/i.test(deviceId) ? {facingMode: deviceId} : {deviceId},\n\t\t\tconstraint === true ? {} : constraint);\n\t}\n\treturn constraint;\n};\n\n/**\n * Helpers for MediaDevices and MediaStreamConstraints.\n */\nexport default class Media {\n\t/**\n\t * facingMode values to use with constraints\n\t * @returns {{USER: string, ENVIRONMENT: string}}\n\t */\n\tstatic get facingMode() {\n\t\treturn {\n\t\t\tUSER: 'user',\n\t\t\tENVIRONMENT: 'environment'\n\t\t};\n\t}\n\n\t/**\n\t * Helpers to create a MediaStreamConstraints configuration object\n\t * @param {boolean|MediaTrackConstraints|string} [videoConstraints='HD'] a boolean, a video constraints object or a preset id (UHD, FHD, HD, SVGA, SD, VGA)\n\t * @param {boolean|MediaTrackConstraints} [audioConstraints=true] a boolean or an audio constraints object\n\t * @param {string} [type=ideal] type of constraints for video when using a preset (exact,min,max or ideal)\n\t * @param {string|object} [videoDeviceId] video input device id or facingMode\n\t * @param {string|object} [audioDeviceId] audio input device id\n\t * @returns {object}\n\t * @throws {Error}\n\t *\n\t * @example <caption>HD AudioVideo with default devices</caption>\n\t * let myConstraints = Reach.media.constraints();\n\t * console.log(myConstraints);\n\t *\n\t * @example <caption>Full HD Video without audio using default devices</caption>\n\t * let myConstraints = Reach.media.constraints('FHD', false, 'exact');\n\t * console.log(myConstraints);\n\t */\n\tstatic constraints (videoConstraints = 'HD', audioConstraints = true, type = 'ideal', videoDeviceId, audioDeviceId) {\n\t\tlet video = videoConstraints;\n\t\tif (typeof videoConstraints === 'string'){\n\t\t\tif(presets[videoConstraints.toUpperCase()]) {\n\t\t\t\tconst\n\t\t\t\t\tpreset = presets[videoConstraints.toUpperCase()],\n\t\t\t\t\tdimConstraint = (dim) => {\n\t\t\t\t\t\tif(/^(min|max|exact)$/.test(type)) {\n\t\t\t\t\t\t\tconst r = {};\n\t\t\t\t\t\t\tr[type] = preset[dim];\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tmin: preset.min ? presets[preset.min][dim] : preset[dim],\n\t\t\t\t\t\t\tideal: preset[dim],\n\t\t\t\t\t\t\tmax: preset.max ? presets[preset.max][dim] : preset[dim]\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\tvideo = {width: dimConstraint('w'), height: dimConstraint('h')};\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown Video Resolution preset (UHD, FHD, HD, SVGA, SD, VGA)');\n\t\t\t}\n\t\t}\n\t\tvideo = _assignDevice(video, videoDeviceId);\n\n\t\tconst audio = _assignDevice(audioConstraints, audioDeviceId);\n\n\t\tLog.d('Media#constraints', {video, audio});\n\t\treturn {video, audio};\n\t}\n\n\t/**\n\t * Init stream display node depending on stream type\n\t * @param {MediaStream} mediaStream The MediaStream to display\n\t * @param {Element} container Container node for streams\n\t * @param {Element} previous Previous node for the stream\n\t * @param {number} [volume=.7] the default volume\n\t * @return {Element}\n\t */\n\tstatic attachStream(mediaStream, container, previous, volume = .7) {\n\t\tlet tagName = '';\n\t\tif(mediaStream.getVideoTracks().length > 0) {\n\t\t\ttagName = 'video';\n\t\t} else if(mediaStream.getAudioTracks().length > 0) {\n\t\t\ttagName = 'audio';\n\t\t}\n\t\tLog.d('Media#attachStream', mediaStream, tagName);\n\t\tif (tagName.length > 0) {\n\t\t\tlet _node = previous;\n\t\t\tif (!_node || _node.tagName.toLowerCase() !== tagName) {\n\t\t\t\t_node = document.createElement(tagName);\n\t\t\t\t_node.autoplay = true;\n\t\t\t\t// set these attributes in order to launch the video on IOS\n\t\t\t\tif (Reach.browser.browser === 'safari') {\n\t\t\t\t\t_node.setAttribute('playsinline',true);\n\t\t\t\t\t_node.setAttribute('muted',true);\n\t\t\t\t}\n\t\t\t\t_node.style.borderRadius = '1px';\n\t\t\t}\n\t\t\tif (container) {\n\t\t\t\tif (previous && previous !== _node) {\n\t\t\t\t\tcontainer.replaceChild(_node, previous);\n\t\t\t\t} else if (!previous) {\n\t\t\t\t\tcontainer.appendChild(_node);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_node.srcObject = mediaStream;\n\t\t\t// disabled doesn't seem to be needed\n\t\t\t// _node.disabled = false;\n\t\t\t_node.volume = volume;\n\t\t\treturn _node;\n\t\t}\n\t\treturn previous;\n\t}\n\n\t/**\n\t * List available input devices\n\t * @return {Promise<{audioinput: MediaDeviceInfo[], videoinput: MediaDeviceInfo[]}>}\n\t *\n\t * @example\n\t * Reach.media.devices().then(devices => {\n\t *  // Video cameras\n\t *  console.log(devices.videoinput);\n\t *  // Audio mics\n\t *  console.log(devices.audioinput);\n\t * });\n\t */\n\tstatic devices () {\n\t\treturn navigator.mediaDevices.enumerateDevices()\n\t\t\t.then(devices => {\n\t\t\t\tconst r = {};\n\t\t\t\tdevices.forEach(device => {\n\t\t\t\t\tif (!r[device.kind]) {\n\t\t\t\t\t\tr[device.kind] = [];\n\t\t\t\t\t}\n\t\t\t\t\tr[device.kind].push(device);\n\t\t\t\t});\n\t\t\t\tLog.d('Media#devices', r);\n\t\t\t\treturn r;\n\t\t\t})\n\t\t\t.catch(Log.r('Media#devices'));\n\t}\n}\n",
    "static": true,
    "longname": "src/core/util/Media.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "presets",
    "memberof": "src/core/util/Media.js",
    "static": true,
    "longname": "src/core/util/Media.js~presets",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/Media.js",
    "importStyle": null,
    "description": "Video resolution presets",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "{UHD: {w: number, h: number, min: string}, FHD: {w: number, h: number, min: string, max: string}, HD: {w: number, h: number, min: string, max: string}, SVGA: {w: number, h: number, min: string, max: string}, SD: {w: number, h: number, min: string, max: string}, VGA: {w: number, h: number, max: string}}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "_assignDevice",
    "memberof": "src/core/util/Media.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Media.js~_assignDevice",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/util/Media.js",
    "importStyle": null,
    "description": "Assign deviceId to constraint",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "constraint",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "deviceId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 244,
    "kind": "class",
    "name": "Media",
    "memberof": "src/core/util/Media.js",
    "static": true,
    "longname": "src/core/util/Media.js~Media",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/core/util/Media.js",
    "importStyle": "Media",
    "description": "Helpers for MediaDevices and MediaStreamConstraints.",
    "lineNumber": 37,
    "interface": false
  },
  {
    "__docId__": 245,
    "kind": "get",
    "name": "facingMode",
    "memberof": "src/core/util/Media.js~Media",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Media.js~Media.facingMode",
    "access": null,
    "description": "facingMode values to use with constraints",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{USER: string, ENVIRONMENT: string}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{USER: string, ENVIRONMENT: string}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"USER\": string, \"ENVIRONMENT\": string}"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "constraints",
    "memberof": "src/core/util/Media.js~Media",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Media.js~Media.constraints",
    "access": null,
    "description": "Helpers to create a MediaStreamConstraints configuration object",
    "examples": [
      "<caption>HD AudioVideo with default devices</caption>\nlet myConstraints = Reach.media.constraints();\nconsole.log(myConstraints);",
      "<caption>Full HD Video without audio using default devices</caption>\nlet myConstraints = Reach.media.constraints('FHD', false, 'exact');\nconsole.log(myConstraints);"
    ],
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean",
          "MediaTrackConstraints",
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'HD'",
        "defaultRaw": "'HD'",
        "name": "videoConstraints",
        "description": "a boolean, a video constraints object or a preset id (UHD, FHD, HD, SVGA, SD, VGA)"
      },
      {
        "nullable": null,
        "types": [
          "boolean",
          "MediaTrackConstraints"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "audioConstraints",
        "description": "a boolean or an audio constraints object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "ideal",
        "defaultRaw": "ideal",
        "name": "type",
        "description": "type of constraints for video when using a preset (exact,min,max or ideal)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "videoDeviceId",
        "description": "video input device id or facingMode"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "audioDeviceId",
        "description": "audio input device id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "attachStream",
    "memberof": "src/core/util/Media.js~Media",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Media.js~Media.attachStream",
    "access": null,
    "description": "Init stream display node depending on stream type",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaStream",
        "description": "The MediaStream to display"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "Container node for streams"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "previous",
        "description": "Previous node for the stream"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": ".7",
        "defaultRaw": ".7",
        "name": "volume",
        "description": "the default volume"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "devices",
    "memberof": "src/core/util/Media.js~Media",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/util/Media.js~Media.devices",
    "access": null,
    "description": "List available input devices",
    "examples": [
      "Reach.media.devices().then(devices => {\n // Video cameras\n console.log(devices.videoinput);\n // Audio mics\n console.log(devices.audioinput);\n});"
    ],
    "lineNumber": 154,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{audioinput: MediaDeviceInfo[], videoinput: MediaDeviceInfo[]}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/core/util/cache.js",
    "content": "import Config from '../Config';\nimport StreamManager from '../stream/StreamManager';\nimport PeerConnectionManager from '../webrtc/PeerConnectionManager';\nimport Webcom from 'webcom/webcom';\n\n/**\n * singleton\n * @type {CacheManager}\n * @private\n */\nlet _cache = null;\n\n/**\n * Singleton to handle global references\n * @access protected\n */\nclass CacheManager {\n\t/**\n\t * Construct singleton\n\t * @return {CacheManager}\n\t */\n\tconstructor() {\n\t\tif(!_cache) {\n\t\t\t_cache = this;\n\t\t}\n\t\treturn _cache;\n\t}\n\t/**\n\t * The base reference\n\t * @param {Webcom} url the reference or its url\n\t */\n\tset base(url) {\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._base = url instanceof Webcom ? url : new Webcom(url);\n\t}\n\t/**\n\t * The base reference\n\t * @type {Webcom}\n\t */\n\tget base() {\n\t\treturn this._base;\n\t}\n\n\t/**\n\t * The connected user\n\t * @param {Config} config the connected user\n\t */\n\tset config(config) {\n\t\tif(!this._config) {\n\t\t\t/**\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tthis._config = new Config(config);\n\t\t} else {\n\t\t\tthis._config.assign(config);\n\t\t}\n\t}\n\t/**\n\t * The connected user\n\t * @type {Config}\n\t */\n\tget config() {\n\t\tif(!this._config) {\n\t\t\tthis._config = new Config();\n\t\t}\n\t\treturn this._config;\n\t}\n\t/**\n\t * The connected user\n\t * @param {User} user the connected user\n\t */\n\tset user(user) {\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._user = user;\n\t}\n\t/**\n\t * The connected user\n\t * @type {User}\n\t */\n\tget user() {\n\t\treturn this._user;\n\t}\n\t/**\n\t * The current device\n\t * @param {string} device the current device\n\t */\n\tset device(device) {\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._device = device;\n\t}\n\t/**\n\t * The current device\n\t * @type {string}\n\t */\n\tget device() {\n\t\treturn this._device;\n\t}\n\n\t/**\n\t * The log level (DEBUG, INFO, WARN, ERROR)\n\t * @type {string}\n\t */\n\tset logLevel(level) {\n\t\tif(/^DEBUG|INFO|WARN|ERROR$/i.test(level)) {\n\t\t\t/**\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tthis._logLevel = level;\n\t\t} else if(level) {\n\t\t\tthrow new Error('Unsupported log level (DEBUG, INFO, WARN, ERROR)');\n\t\t}\n\t}\n\t/**\n\t * The log level (DEBUG, INFO, WARN, ERROR)\n\t * @returns {string}\n\t */\n\tget logLevel() {\n\t\treturn this._logLevel || 'ERROR';\n\t}\n\n\t/**\n\t * Streams manager\n\t * @returns {StreamManager}\n\t */\n\tget streams() {\n\t\tif(!this._streams) {\n\t\t\t/**\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tthis._streams = new StreamManager();\n\t\t}\n\t\treturn this._streams;\n\t}\n\n\t/**\n\t * PeerConnections manager\n\t * @returns {PeerConnectionManager}\n\t */\n\tget peerConnections() {\n\t\tif(!this._peerConnections) {\n\t\t\t/**\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tthis._peerConnections = new PeerConnectionManager();\n\t\t}\n\t\treturn this._peerConnections;\n\t}\n}\n\n/**\n * The singleton instance\n * @ignore\n * @type {CacheManager}\n */\nconst cache = new CacheManager();\n\n/**\n * Singleton for shared references\n * @access protected\n */\nexport default cache;\n",
    "static": true,
    "longname": "src/core/util/cache.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "_cache",
    "memberof": "src/core/util/cache.js",
    "static": true,
    "longname": "src/core/util/cache.js~_cache",
    "access": "private",
    "export": false,
    "importPath": "webcom-reach/src/core/util/cache.js",
    "importStyle": null,
    "description": "singleton",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "CacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "CacheManager",
    "memberof": "src/core/util/cache.js",
    "static": true,
    "longname": "src/core/util/cache.js~CacheManager",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/cache.js",
    "importStyle": null,
    "description": "Singleton to handle global references",
    "lineNumber": 17,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 252,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#constructor",
    "access": null,
    "description": "Construct singleton",
    "lineNumber": 22,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "CacheManager"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 253,
    "kind": "set",
    "name": "base",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#base",
    "access": null,
    "description": "The base reference",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Webcom"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the reference or its url"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "_base",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_base",
    "access": null,
    "description": "",
    "lineNumber": 36,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "get",
    "name": "base",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#base",
    "access": null,
    "description": "The base reference",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Webcom"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 256,
    "kind": "set",
    "name": "config",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#config",
    "access": null,
    "description": "The connected user",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Config"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the connected user"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "_config",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_config",
    "access": null,
    "description": "",
    "lineNumber": 55,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "get",
    "name": "config",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#config",
    "access": null,
    "description": "The connected user",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Config"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "_config",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_config",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "set",
    "name": "user",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#user",
    "access": null,
    "description": "The connected user",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the connected user"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "_user",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_user",
    "access": null,
    "description": "",
    "lineNumber": 78,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "get",
    "name": "user",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#user",
    "access": null,
    "description": "The connected user",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "User"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 263,
    "kind": "set",
    "name": "device",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#device",
    "access": null,
    "description": "The current device",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "device",
        "description": "the current device"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "_device",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_device",
    "access": null,
    "description": "",
    "lineNumber": 95,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "get",
    "name": "device",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#device",
    "access": null,
    "description": "The current device",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 266,
    "kind": "set",
    "name": "logLevel",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#logLevel",
    "access": null,
    "description": "The log level (DEBUG, INFO, WARN, ERROR)",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "_logLevel",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_logLevel",
    "access": null,
    "description": "",
    "lineNumber": 114,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "get",
    "name": "logLevel",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#logLevel",
    "access": null,
    "description": "The log level (DEBUG, INFO, WARN, ERROR)",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "get",
    "name": "streams",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#streams",
    "access": null,
    "description": "Streams manager",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{StreamManager}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StreamManager"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "_streams",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_streams",
    "access": null,
    "description": "",
    "lineNumber": 136,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "get",
    "name": "peerConnections",
    "memberof": "src/core/util/cache.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#peerConnections",
    "access": null,
    "description": "PeerConnections manager",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PeerConnectionManager}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PeerConnectionManager"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "_peerConnections",
    "memberof": "src/core/util/cache.js~CacheManager",
    "static": false,
    "longname": "src/core/util/cache.js~CacheManager#_peerConnections",
    "access": null,
    "description": "",
    "lineNumber": 150,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "cache",
    "memberof": "src/core/util/cache.js",
    "static": true,
    "longname": "src/core/util/cache.js~cache",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/cache.js",
    "importStyle": "cache",
    "description": "Singleton for shared references",
    "lineNumber": 167,
    "type": {
      "types": [
        "src/core/util/cache.js~CacheManager"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/core/util/constants.js",
    "content": "/**\n * OPENED\n * @access protected\n * @type {string}\n */\nexport const OPENED = 'OPENED';\n/**\n * CLOSED\n * @access protected\n * @type {string}\n */\nexport const CLOSED = 'CLOSED';\n/**\n * CLOSING\n * @access protected\n * @type {string}\n */\nexport const CLOSING = 'CLOSING';\n/**\n * CONNECTED\n * @access protected\n * @type {string}\n */\nexport const CONNECTED = 'CONNECTED';\n/**\n * NOT_CONNECTED\n * @access protected\n * @type {string}\n */\nexport const NOT_CONNECTED = 'NOT_CONNECTED';\n/**\n * WAS_CONNECTED\n * @access protected\n * @type {string}\n */\nexport const WAS_CONNECTED = 'WAS_CONNECTED';\n/**\n * OWNER\n * @access protected\n * @type {string}\n */\nexport const OWNER = 'OWNER';\n/**\n * MODERATOR\n * @access protected\n * @type {string}\n */\nexport const MODERATOR = 'MODERATOR';\n/**\n * PARTICIPANT\n * @access protected\n * @type {string}\n */\nexport const PARTICIPANT = 'PARTICIPANT';\n/**\n * NONE\n * @access protected\n * @type {string}\n */\nexport const NONE = 'NONE';\n/**\n * Ongoing invitation\n * @access protected\n * @type {string}\n */\nexport const ONGOING = 'ONGOING';\n/**\n * Accepted invitation\n * @access protected\n * @type {string}\n */\nexport const ACCEPTED = 'ACCEPTED';\n/**\n * Rejected invitation\n * @access protected\n * @type {string}\n */\nexport const REJECTED = 'REJECTED';\n/**\n * Canceled invitation\n * @access protected\n * @type {string}\n */\nexport const CANCELED = 'CANCELED';\n",
    "static": true,
    "longname": "src/core/util/constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "OPENED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~OPENED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{OPENED}",
    "description": "OPENED",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 276,
    "kind": "variable",
    "name": "CLOSED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~CLOSED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{CLOSED}",
    "description": "CLOSED",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "CLOSING",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~CLOSING",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{CLOSING}",
    "description": "CLOSING",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "CONNECTED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~CONNECTED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{CONNECTED}",
    "description": "CONNECTED",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "NOT_CONNECTED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~NOT_CONNECTED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{NOT_CONNECTED}",
    "description": "NOT_CONNECTED",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 280,
    "kind": "variable",
    "name": "WAS_CONNECTED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~WAS_CONNECTED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{WAS_CONNECTED}",
    "description": "WAS_CONNECTED",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "name": "OWNER",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~OWNER",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{OWNER}",
    "description": "OWNER",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "name": "MODERATOR",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~MODERATOR",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{MODERATOR}",
    "description": "MODERATOR",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "name": "PARTICIPANT",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~PARTICIPANT",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{PARTICIPANT}",
    "description": "PARTICIPANT",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 284,
    "kind": "variable",
    "name": "NONE",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~NONE",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{NONE}",
    "description": "NONE",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 285,
    "kind": "variable",
    "name": "ONGOING",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~ONGOING",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{ONGOING}",
    "description": "Ongoing invitation",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "ACCEPTED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~ACCEPTED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{ACCEPTED}",
    "description": "Accepted invitation",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "REJECTED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~REJECTED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{REJECTED}",
    "description": "Rejected invitation",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "CANCELED",
    "memberof": "src/core/util/constants.js",
    "static": true,
    "longname": "src/core/util/constants.js~CANCELED",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/util/constants.js",
    "importStyle": "{CANCELED}",
    "description": "Canceled invitation",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "src/core/webrtc/PeerConnection.js",
    "content": "/*global RTCPeerConnection*/\n/*global RTCRtpSender*/\nimport cache from '../util/cache';\nimport * as Log from '../util/Log';\nimport Media from '../util/Media';\nimport * as DataSync from '../util/DataSync';\nimport {OPENED, CLOSING, CLOSED} from '../util/constants';\nimport 'core-js/fn/array/find';\n\nconst DtlsSrtpKeyAgreement = {DtlsSrtpKeyAgreement: true};\nconst sdpConstraints = receive => ({OfferToReceiveAudio: receive, OfferToReceiveVideo: receive});\n/**\n * ICE connection status : disconnected\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_DISCONNECTED = 'disconnected';\n/**\n * ICE connection status : connected\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CONNECTED= 'connected';\n/**\n * ICE connection status : completed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_COMPLETED = 'completed';\n/**\n * ICE connection status : checking\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CHECKING = 'checking';\n/**\n * ICE connection status : closed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CLOSED = 'closed';\n/**\n * ICE connection status : failed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_FAILED = 'failed';\n/**\n * ICE connection status : another status\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_OTHER= 'other';\n/**\n * @ignore\n */\nconst _toJSON = o => o.toJSON && typeof o.toJSON === 'function' ? o.toJSON() : o;\n/**\n * The PeerConnection. A PeerConnection will only concern one MediaStream.\n * @class PeerConnection\n */\nexport default class PeerConnection {\n\t/**\n\t * @access protected\n\t * @param {string} stackId The WebRTC stack ID\n\t * @param {string} streamId The Stream UID\n\t * @param {string} remoteDevice The remote device's UID\n\t * @param {boolean} publish Publish or Subscribe ?\n\t */\n\tconstructor(stackId, streamId, remoteDevice, publish) {\n\t\t/**\n\t\t * The stack identifier. Used to identify exchanges between 2 devices\n\t\t * @type {string}\n\t\t */\n\t\tthis.stackId = stackId;\n\t\t/**\n\t\t * The stream id. (One stream per RTCPeerConnection)\n\t\t * @type {string}\n\t\t */\n\t\tthis.streamId = streamId;\n\t\t/**\n\t\t * The remote device Id\n\t\t * @type {string}\n\t\t */\n\t\tthis.remoteDevice = remoteDevice;\n\t\t/**\n\t\t * Path for local signalization\n\t\t * @access private\n\t\t * @type {string}\n\t\t */\n\t\tthis._localPath = `_/webrtc/${this.stackId}/${this.streamId}/${cache.device}`;\n\t\t/**\n\t\t * Path for local signalization\n\t\t * @access private\n\t\t * @type {string}\n\t\t */\n\t\tthis._remotePath = `_/webrtc/${this.stackId}/${this.streamId}/${this.remoteDevice}`;\n\t\t/**\n\t\t * Indicates if the PeerConnection has been established. (Useful for renegotiation).\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.negotiated = false;\n\t\t/**\n\t\t * The DOM element where the remote MediaStream will be displayed\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.node = null;\n\t\t/**\n\t\t * The DOM element containg the media element\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.container = null;\n\t\t/**\n\t\t * The actual RTCPeerConnection\n\t\t * @type {RTCPeerConnection}\n\t\t */\n\t\tthis.pc = new RTCPeerConnection(\n\t\t\t{\n\t\t\t\ticeServers: cache.config.iceServers\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: [DtlsSrtpKeyAgreement],\n\t\t\t\tmandatory: sdpConstraints(!publish)\n\t\t\t}\n\t\t);\n\t\t// Handle ICE candidates\n\t\tthis.pc.onicecandidate = e => {\n\t\t\tif (!this.negotiated && e.candidate) {\n\t\t\t\tLog.d('PeerConnection~onicecandidate', e.candidate);\n\t\t\t\tDataSync.push(`${this._localPath}/ice`, _toJSON(e.candidate));\n\t\t\t}\n\t\t};\n\t\tthis.pc.oniceconnectionstatechange = () => {\n\t\t\tLog.d('PeerConnection~oniceconnectionstatechange', this.pc);\n\t\t\tconst iceConnectionState = this.pc.iceConnectionState;\n\t\t\tswitch (iceConnectionState) {\n\t\t\t\tcase ICE_CONNECTION_STATE_CHECKING:\n\t\t\t\t\t// Nothing to do yet\n\t\t\t\t\tbreak;\n\t\t\t\tcase ICE_CONNECTION_STATE_CONNECTED:\n\t\t\t\t\tthis._attachStream();\n\t\t\t\t\tthis._remoteICECandidates(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ICE_CONNECTION_STATE_COMPLETED:\n\t\t\t\t\tthis._remoteICECandidates(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ICE_CONNECTION_STATE_DISCONNECTED:\n\t\t\t\tcase ICE_CONNECTION_STATE_FAILED:\n\t\t\t\t\tLog.e('PeerConnection~stateDisconnected', 'Disconnect PeerConnection');\n\t\t\t\t\tbreak;\n\t\t\t\tcase ICE_CONNECTION_STATE_CLOSED:\n\t\t\t\t\tLog.d('PeerConnection~stateclosed', 'Close PeerConnection');\n\t\t\t\t\tthis.close();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.negotiated = this.negotiated || this.isConnected;\n\t\t};\n\n\t\tthis.pc.onicegatheringstatechange = () => {\n\t\t\tLog.d('PeerConnection~onicegatheringstatechange', this.pc.iceGatheringState);\n\t\t};\n\n\t\t/**\n\t\t * PeerConnection status\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._status = OPENED;\n\t}\n\n\t/**\n\t * Toggle ICE Candidates discovery\n\t * @access private\n\t * @param {boolean} listen Indicates if we should listen to new ICE candidates\n\t */\n\t_remoteICECandidates(listen) {\n\t\tconst\n\t\t\tpath = `${this._remotePath}/ice`,\n\t\t\tevent = 'child_added';\n\t\tif(listen) {\n\t\t\t// don't listen to ice candidates if pc is already up (renegotiation)\n\t\t\tDataSync.on(path, event, snap => {\n\t\t\t\tconst candidate = snap.val();\n\t\t\t\tLog.d('PeerConnection~addIceCandidate', candidate);\n\t\t\t\tthis.pc.addIceCandidate(new RTCIceCandidate(candidate));\n\t\t\t});\n\t\t} else {\n\t\t\tDataSync.off(path, event);\n\t\t}\n\t}\n\n\t/**\n\t * Attach the remote MediaStream to a node\n\t * @access private\n\t */\n\t_attachStream () {\n\t\tif(this.remoteStream && this.isConnected) {\n\t\t\tthis.node = Media.attachStream(this.remoteStream, this.container, this.node);\n\t\t\tthis.node.muted = false;\n\t\t}\n\t}\n\n\t/**\n\t * The remote MediaStream\n\t * @access protected\n\t * @type {MediaStream}\n\t */\n\tset remoteStream (stream) {\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tthis._remoteStream = stream;\n\t\tthis._attachStream();\n\t}\n\n\t/**\n\t * The remote MediaStream\n\t * @type {MediaStream}\n\t */\n\tget remoteStream () {\n\t\treturn this._remoteStream;\n\t}\n\n\t/**\n\t * Indicates if the PeerConnection is established based on ICE connection state\n\t * @returns {boolean}\n\t */\n\tget isConnected () {\n\t\treturn this.pc &&\n\t\t\t!!~[\n\t\t\t\tICE_CONNECTION_STATE_CONNECTED,\n\t\t\t\tICE_CONNECTION_STATE_COMPLETED,\n\t\t\t\tICE_CONNECTION_STATE_OTHER\n\t\t\t].indexOf(this.pc.iceConnectionState);\n\t}\n\n\t/**\n\t * Init RTCPeerConnection for subscribers\n\t * @access protected\n\t * @param htmlElement\n\t * @returns {Promise.<PeerConnection>}\n\t */\n\tanswer(htmlElement) {\n\t\tLog.i('PeerConnection~answer', {htmlElement, peerConnection: this});\n\t\tthis.container = htmlElement;\n\t\tif(Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, 'ontrack')) {\n\t\t\tthis.pc.ontrack = e => {\n\t\t\t\tLog.d('PeerConnection~ontrack', e.streams[0]);\n\t\t\t\tthis.remoteStream = e.streams[0];\n\t\t\t};\n\t\t} else {\n\t\t\tthis.pc.onaddstream = e => {\n\t\t\t\tLog.d('PeerConnection~onaddstream', e.stream);\n\t\t\t\tthis.remoteStream = e.stream;\n\t\t\t};\n\t\t}\n\n\t\t// Listen to SDP offer\n\t\tDataSync.on(`${this._remotePath}/sdp`, 'value', snap => {\n\t\t\tconst sdpOffer = snap.val();\n\t\t\tLog.d('Offer', sdpOffer);\n\t\t\tif(sdpOffer != null) {\n\t\t\t\tLog.d('PeerConnection~offered', sdpOffer);\n\t\t\t\tthis.pc.setRemoteDescription(sdpOffer)\n\t\t\t\t\t.then(() => Log.d('PeerConnection~remoteDescription', this.pc.remoteDescription))\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (/^offer$/.test(this.pc.remoteDescription.type)) {\n\t\t\t\t\t\t\treturn this.pc.createAnswer();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.reject(new Error('SDP is not an offer'));\n\t\t\t\t\t})\n\t\t\t\t\t.then(description => this._setPreferredCodecs(description))\n\t\t\t\t\t.then(description => this.pc.setLocalDescription(description))\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tLog.d('PeerConnection~localDescription', this.pc.localDescription);\n\t\t\t\t\t\tthis._remoteICECandidates(true);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => DataSync.update(`${this._localPath}/sdp`, _toJSON(this.pc.localDescription)))\n\t\t\t\t\t.catch(Log.r('PeerConnection~localDescription'));\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.resolve(this);\n\t}\n\n\t/**\n\t * Init RTCPeerConnection for publishers\n\t * @access protected\n\t * @param stream\n\t * @returns {Promise.<PeerConnection>}\n\t */\n\toffer(stream) {\n\t\tLog.i('PeerConnection~offer', {stream, peerConnection: this});\n\t\tlet sendTimeout;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.pc.onnegotiationneeded = () => {\n\t\t\t\tLog.d('PeerConnection~onnegotiationneeded');\n\t\t\t\t// Debounce send (renegotiation triggers multiple negotiationneeded events)\n\t\t\t\tif(sendTimeout) {\n\t\t\t\t\tclearTimeout(sendTimeout);\n\t\t\t\t\tsendTimeout = null;\n\t\t\t\t}\n\t\t\t\tsendTimeout = setTimeout(() => {\n\t\t\t\t\tsendTimeout = null;\n\t\t\t\t\tthis._sendOffer()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\t\tLog.d('PeerConnection~offer', e);\n\t\t\t\t\t\t\treject(e);\n\t\t\t\t\t\t});\n\t\t\t\t}, 20);\n\t\t\t};\n\t\t\tDataSync.on(`${this._remotePath}/sdp`, 'value', snap => {\n\t\t\t\tconst sdpAnswer = snap.val();\n\t\t\t\tif(sdpAnswer != null) {\n\t\t\t\t\tLog.d('PeerConnection~offer#answered', sdpAnswer);\n\t\t\t\t\tthis.pc.setRemoteDescription(sdpAnswer)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tLog.d('PeerConnection~offer#remoteDescription', this.pc.remoteDescription);\n\t\t\t\t\t\t\tthis._remoteICECandidates(true);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(Log.e.bind(Log, 'PeerConnection~remoteDescription'));\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._alterStream(stream, 'add');\n\t\t});\n\t}\n\n\t/**\n\t * Create SDP offer and push it\n\t * @returns {Promise}\n\t * @private\n\t */\n\t_sendOffer() {\n\t\tLog.d('PeerConnection~_sendOffer');\n\t\treturn this.pc.createOffer()\n\t\t\t.then(description => this._setPreferredCodecs(description))\n\t\t\t.then(description => this.pc.setLocalDescription(description))\n\t\t\t.then(() => Log.d('PeerConnection~renegotiate#localDescription', this.pc.localDescription))\n\t\t\t.then(() => DataSync.update(`${this._localPath}/sdp`, _toJSON(this.pc.localDescription)));\n\t}\n\n\t/**\n\t * Add/Remove tracks to the PeerConnection stream\n\t * @param {MediaStream} stream\n\t * @param {string} method\n\t * @private\n\t */\n\t_alterStream(stream, method) {\n\t\tif(Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, `${method}Track`)) {\n\t\t\tif (method === 'add') {\n\t\t\t\tstream.getTracks().forEach(track => this.pc[`${method}Track`](track, stream), this);\n\t\t\t} else {\n\t\t\t\tthis.pc.getSenders().forEach(sender => this.pc[`${method}Track`](sender), this);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.pc[`${method}Stream`](stream);\n\t\t}\n\t}\n\n\t/**\n\t * Restart SDP negotiation following a MediaStream change\n\t * @access protected\n\t * @param {MediaStream} oldStream\n\t * @param {MediaStream} newStream\n\t */\n\trenegotiate(oldStream, newStream) {\n\t\tLog.d('PeerConnection~renegotiate');\n\t\tif((Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, 'getSenders'))\n\t\t\t&& ('RTCRtpSender' in window)\n\t\t\t&& Object.getOwnPropertyDescriptor(RTCRtpSender.prototype, 'replaceTrack')){\n\n\t\t\t// mozRTCPeerConnection implementation\n\t\t\tthis.pc.getSenders().forEach(sender => {\n\t\t\t\tlet newTracks;\n\t\t\t\tswitch (sender.track.kind) {\n\t\t\t\t\tcase 'audio':\n\t\t\t\t\t\tnewTracks = newStream.getAudioTracks();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'video':\n\t\t\t\t\t\tnewTracks = newStream.getVideoTracks();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tnewTracks = [];\n\t\t\t\t}\n\t\t\t\tif(newTracks.length) {\n\t\t\t\t\tsender.replaceTrack(newTracks[0]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._sendOffer()\n\t\t\t\t.catch(e => {Log.d('PeerConnection~renegotiate', e);});\n\t\t} else {\n\t\t\tthis._alterStream(oldStream, 'remove');\n\t\t\tthis._alterStream(newStream, 'add');\n\t\t}\n\t}\n\n\t/**\n\t * Close the PeerConnection and stop listening to SDP messages\n\t * @access protected\n\t */\n\tclose() {\n\t\tif(this._status === OPENED) {\n\t\t\tthis._status = CLOSING;\n\t\t\t// Stop display\n\t\t\tif (this.node) {\n\t\t\t\tthis.node.stop && this.node.stop();\n\t\t\t\tthis.node.srcObject = null;\n\t\t\t\tthis.container.removeChild(this.node);\n\t\t\t\tthis.node = null;\n\t\t\t}\n\t\t\t// Stop listening to remote ICE candidates\n\t\t\tthis._remoteICECandidates(false);\n\t\t\t// Stop listening to SDP messages\n\t\t\tDataSync.off(`${this._remotePath}/sdp`, 'value');\n\t\t\t// Remove data\n\t\t\tDataSync.remove(this._localPath);\n\t\t\t// Close PeerConnection\n\t\t\tif (this.pc && this.pc.signalingState !== 'closed') {\n\t\t\t\tthis.pc.onsignalingstatechange = () => {\n\t\t\t\t\tif(this.pc.signalingState !== 'closed') {\n\t\t\t\t\t\tthis._status = CLOSED;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.pc.close();\n\t\t\t} else {\n\t\t\t\tthis._status = CLOSED;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Edits the SDP to set the preferred audio/video codec\n\t * @access private\n\t * @param {RTCSessionDescription} description The description retrieved by createOffer/createAnswer\n\t * @returns {RTCSessionDescription|{sdp: string, type: string}}\n\t */\n\t_setPreferredCodecs(description) {\n\t\tif(cache.config.preferredVideoCodec || cache.config.preferredAudioCodec) {\n\t\t\tLog.d('PeerConnection~_setPreferredCodecs', {description, config: cache.config});\n\t\t\tconst sdpLines = description.sdp.split(/\\r?\\n/);\n\t\t\tconst medias = {audio: [], video: []};\n\t\t\tlet current = null;\n\t\t\t// Parse SDP\n\t\t\tsdpLines.forEach((sdpLine, i) => {\n\t\t\t\tif(/^m=/.test(sdpLine)) {\n\t\t\t\t\tconst d = /^m=(\\w+)\\s[0-9\\/]+\\s[A-Za-z0-9\\/]+\\s([0-9\\s]+)/.exec(sdpLine);\n\t\t\t\t\tcurrent = {\n\t\t\t\t\t\tfmt: d[2].split(/\\s/),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tcodecs: []\n\t\t\t\t\t};\n\t\t\t\t\tmedias[d[1]].push(current);\n\t\t\t\t} else if(current && /^a=rtpmap:/.test(sdpLine)) {\n\t\t\t\t\tconst c = /^a=rtpmap:(\\d+)\\s([a-zA-Z0-9\\-\\/]+)/.exec(sdpLine);\n\t\t\t\t\tif(c) {\n\t\t\t\t\t\tcurrent.codecs.push({\n\t\t\t\t\t\t\tid: c[1],\n\t\t\t\t\t\t\tname: c[2],\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tLog.d('PeerConnection~_setPreferredCodecs', medias);\n\t\t\tlet update = false;\n\t\t\tconst prefer = (mediaList, preferedCodec) => {\n\t\t\t\tmediaList.forEach(media => {\n\t\t\t\t\tconst selected = media.codecs.find(codec => preferedCodec.test(codec.name));\n\t\t\t\t\tif(selected) {\n\t\t\t\t\t\tconst fmt = [selected.id].concat(media.fmt.filter(ids => ids !== selected.id));\n\t\t\t\t\t\tsdpLines[media.index] = sdpLines[media.index].replace(media.fmt.join(' '), fmt.join(' '));\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tif(cache.config.preferredVideoCodec) {\n\t\t\t\tprefer(medias.video, cache.config.preferredVideoCodec);\n\t\t\t}\n\t\t\tif(cache.config.preferredAudioCodec) {\n\t\t\t\tprefer(medias.audio, cache.config.preferredAudioCodec);\n\t\t\t}\n\t\t\tif(update) {\n\t\t\t\tLog.d('PeerConnection~_setPreferredCodecs', sdpLines.join('\\r\\n'));\n\t\t\t\treturn {\n\t\t\t\t\tsdp: sdpLines.join('\\r\\n'),\n\t\t\t\t\ttype: description.type\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn description;\n\t}\n}\n",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "variable",
    "name": "DtlsSrtpKeyAgreement",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~DtlsSrtpKeyAgreement",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"DtlsSrtpKeyAgreement\": boolean}"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "sdpConstraints",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~sdpConstraints",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "receive",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_DISCONNECTED",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_DISCONNECTED",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : disconnected",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_CONNECTED",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_CONNECTED",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : connected",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_COMPLETED",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_COMPLETED",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : completed",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_CHECKING",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_CHECKING",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : checking",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_CLOSED",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_CLOSED",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : closed",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_FAILED",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_FAILED",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : failed",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 298,
    "kind": "variable",
    "name": "ICE_CONNECTION_STATE_OTHER",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~ICE_CONNECTION_STATE_OTHER",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "ICE connection status : another status",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "_toJSON",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~_toJSON",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 57,
    "ignore": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 300,
    "kind": "class",
    "name": "PeerConnection",
    "memberof": "src/core/webrtc/PeerConnection.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnection.js",
    "importStyle": "PeerConnection",
    "description": "The PeerConnection. A PeerConnection will only concern one MediaStream.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PeerConnection"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 301,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#constructor",
    "access": "protected",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stackId",
        "description": "The WebRTC stack ID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "streamId",
        "description": "The Stream UID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "remoteDevice",
        "description": "The remote device's UID"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "publish",
        "description": "Publish or Subscribe ?"
      }
    ]
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "stackId",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#stackId",
    "access": null,
    "description": "The stack identifier. Used to identify exchanges between 2 devices",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "streamId",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#streamId",
    "access": null,
    "description": "The stream id. (One stream per RTCPeerConnection)",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "remoteDevice",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#remoteDevice",
    "access": null,
    "description": "The remote device Id",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "_localPath",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_localPath",
    "access": "private",
    "description": "Path for local signalization",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "_remotePath",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_remotePath",
    "access": "private",
    "description": "Path for local signalization",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "negotiated",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#negotiated",
    "access": null,
    "description": "Indicates if the PeerConnection has been established. (Useful for renegotiation).",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#node",
    "access": "protected",
    "description": "The DOM element where the remote MediaStream will be displayed",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "container",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#container",
    "access": "protected",
    "description": "The DOM element containg the media element",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "pc",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#pc",
    "access": null,
    "description": "The actual RTCPeerConnection",
    "lineNumber": 119,
    "type": {
      "nullable": null,
      "types": [
        "RTCPeerConnection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "negotiated",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#negotiated",
    "access": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "_status",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_status",
    "access": "private",
    "description": "PeerConnection status",
    "lineNumber": 170,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "_remoteICECandidates",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_remoteICECandidates",
    "access": "private",
    "description": "Toggle ICE Candidates discovery",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "listen",
        "description": "Indicates if we should listen to new ICE candidates"
      }
    ]
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "_attachStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_attachStream",
    "access": "private",
    "description": "Attach the remote MediaStream to a node",
    "lineNumber": 198,
    "params": []
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#node",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "set",
    "name": "remoteStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#remoteStream",
    "access": "protected",
    "description": "The remote MediaStream",
    "lineNumber": 210,
    "type": {
      "nullable": null,
      "types": [
        "MediaStream"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "_remoteStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_remoteStream",
    "access": null,
    "description": "",
    "lineNumber": 214,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "get",
    "name": "remoteStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#remoteStream",
    "access": null,
    "description": "The remote MediaStream",
    "lineNumber": 222,
    "type": {
      "nullable": null,
      "types": [
        "MediaStream"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "get",
    "name": "isConnected",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#isConnected",
    "access": null,
    "description": "Indicates if the PeerConnection is established based on ICE connection state",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "answer",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#answer",
    "access": "protected",
    "description": "Init RTCPeerConnection for subscribers",
    "lineNumber": 245,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PeerConnection>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "htmlElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PeerConnection>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "container",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#container",
    "access": null,
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "remoteStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#remoteStream",
    "access": null,
    "description": null,
    "lineNumber": 251,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "remoteStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#remoteStream",
    "access": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "offer",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#offer",
    "access": "protected",
    "description": "Init RTCPeerConnection for publishers",
    "lineNumber": 294,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PeerConnection>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PeerConnection>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "_sendOffer",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_sendOffer",
    "access": "private",
    "description": "Create SDP offer and push it",
    "lineNumber": 338,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "_alterStream",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_alterStream",
    "access": "private",
    "description": "Add/Remove tracks to the PeerConnection stream",
    "lineNumber": 353,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "renegotiate",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#renegotiate",
    "access": "protected",
    "description": "Restart SDP negotiation following a MediaStream change",
    "lineNumber": 371,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "oldStream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "newStream",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "close",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#close",
    "access": "protected",
    "description": "Close the PeerConnection and stop listening to SDP messages",
    "lineNumber": 406,
    "params": []
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "_status",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_status",
    "access": null,
    "description": null,
    "lineNumber": 408,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "node",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#node",
    "access": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "_status",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_status",
    "access": null,
    "description": null,
    "lineNumber": 426,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "_status",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_status",
    "access": null,
    "description": null,
    "lineNumber": 431,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "_setPreferredCodecs",
    "memberof": "src/core/webrtc/PeerConnection.js~PeerConnection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnection.js~PeerConnection#_setPreferredCodecs",
    "access": "private",
    "description": "Edits the SDP to set the preferred audio/video codec",
    "lineNumber": 442,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RTCSessionDescription|{sdp: string, type: string}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RTCSessionDescription"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The description retrieved by createOffer/createAnswer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RTCSessionDescription",
        "{sdp: string, type: string}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "src/core/webrtc/PeerConnectionManager.js",
    "content": "import PeerConnection from './PeerConnection';\nimport cache from '../util/cache';\nimport * as Log from '../util/Log';\nimport * as DataSync from '../util/DataSync';\n\nconst getStackId = (id1, id2) => id1.localeCompare(id2, 'en-us') > 0 ? `${id1}-${id2}` :`${id2}-${id1}`;\n\n/**\n * @access protected\n */\nexport default class PeerConnectionManager {\n\t/**\n\t * Constructor\n\t * @access protected\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * WebRTC stacks\n\t\t * @type {{*: {*: PeerConnection}}}\n\t\t */\n\t\tthis.stacks = {};\n\t}\n\n\n\t/**\n\t * Get a PeerConnection object for a specific stream\n\t * @param {Local|Remote} stream\n\t * @param {Remote|{to: string, device:string}} remote\n\t * @param {boolean} publish\n\t * @return {*}\n\t */\n\tgetPeerConnection(stream, remote, publish) {\n\t\tif(!cache.user) {\n\t\t\treturn Promise.reject(new Error('Only an authenticated user can get a PeerConnection\\'s object.'));\n\t\t}\n\t\tconst stackId = getStackId(remote.device, cache.device);\n\n\t\tif(this.stacks[stackId] && this.stacks[stackId][stream.uid]) {\n\t\t\treturn Promise.resolve(this.stacks[stackId][stream.uid]);\n\t\t}\n\n\t\tif(!this.stacks[stackId]) {\n\t\t\tthis.stacks[stackId] = {};\n\t\t}\n\n\t\tconst users = {};\n\t\tusers[cache.user.uid] = true;\n\t\tusers[remote.from || remote.to] = true;\n\n\t\treturn DataSync.update(`_/webrtc/${stackId}`, users)\n\t\t\t.then(() => new PeerConnection(stackId, stream.uid, remote.device, publish))\n\t\t\t.then(pc => {\n\t\t\t\tLog.d('PeerConnectionManager~getPeerConnection', {stackId, streamId: stream.uid, pc});\n\t\t\t\tthis.stacks[stackId][stream.uid] = pc;\n\t\t\t\treturn pc;\n\t\t\t})\n\t\t\t.catch(Log.r('PeerConnectionManager~getPeerConnection'));\n\t}\n\n\t/**\n\t * Create offer for a stream to a subscriber\n\t * @param {Local} localStream\n\t * @param {object} subscriber\n\t * @return {Promise.<PeerConnection>}\n\t */\n\toffer(localStream, subscriber) {\n\t\tLog.d('PeerConnectionManager~offer', {localStream, subscriber});\n\t\treturn this.getPeerConnection(localStream, subscriber, true)\n\t\t\t.then(pc => pc.offer(localStream.media));\n\t}\n\n\t/**\n\t * Answer to the offer from the publisher\n\t * @param {Remote} remoteStream\n\t * @param {Element} htmlElement\n\t * @return {*|Promise.<PeerConnection>}\n\t */\n\tanswer(remoteStream, htmlElement) {\n\t\tLog.d('PeerConnectionManager~answer', {remoteStream, htmlElement});\n\t\treturn this.getPeerConnection(remoteStream, remoteStream, false)\n\t\t\t.then(pc => pc.answer(htmlElement));\n\t}\n\n\t/**\n\t * Close a PeerConnection\n\t * @param streamId\n\t * @param remoteDevice\n\t * @return {*}\n\t */\n\tclose(streamId, remoteDevice) {\n\t\tconst stackId = getStackId(remoteDevice, cache.device),\n\t\t\tpc = this.stacks[stackId] ? this.stacks[stackId][streamId] : null;\n\t\tif(pc){\n\t\t\tpc.close();\n\t\t\tthis.stacks[stackId][streamId] = null;\n\t\t\tdelete this.stacks[stackId][streamId];\n\t\t\treturn pc;\n\t\t}\n\t\treturn false;\n\t}\n}\n",
    "static": true,
    "longname": "src/core/webrtc/PeerConnectionManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "getStackId",
    "memberof": "src/core/webrtc/PeerConnectionManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/webrtc/PeerConnectionManager.js~getStackId",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnectionManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id1",
        "types": [
          "*"
        ]
      },
      {
        "name": "id2",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 336,
    "kind": "class",
    "name": "PeerConnectionManager",
    "memberof": "src/core/webrtc/PeerConnectionManager.js",
    "static": true,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "access": "protected",
    "export": true,
    "importPath": "webcom-reach/src/core/webrtc/PeerConnectionManager.js",
    "importStyle": "PeerConnectionManager",
    "description": "",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 337,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#constructor",
    "access": "protected",
    "description": "Constructor",
    "lineNumber": 16,
    "params": []
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "stacks",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#stacks",
    "access": null,
    "description": "WebRTC stacks",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "{*: {*: PeerConnection}}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "getPeerConnection",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#getPeerConnection",
    "access": null,
    "description": "Get a PeerConnection object for a specific stream",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Local",
          "Remote"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Remote",
          "{to: string, device:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "remote",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "publish",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "offer",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#offer",
    "access": null,
    "description": "Create offer for a stream to a subscriber",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Local"
        ],
        "spread": false,
        "optional": false,
        "name": "localStream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "subscriber",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PeerConnection>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "answer",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#answer",
    "access": null,
    "description": "Answer to the offer from the publisher",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Remote"
        ],
        "spread": false,
        "optional": false,
        "name": "remoteStream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "htmlElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "Promise.<PeerConnection>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "close",
    "memberof": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/webrtc/PeerConnectionManager.js~PeerConnectionManager#close",
    "access": null,
    "description": "Close a PeerConnection",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "streamId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "remoteDevice",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "file",
    "name": "src/definitions/Browser.js",
    "content": "import {browserDetails, browserShim} from 'webrtc-adapter';\nimport Webcom from 'webcom/webcom';\n\n/**\n * The current browser's infos\n * @typedef {Object} Browser\n * @property {string} name - current browser's name\n * @property {number} [version] - current browser's version\n * @property {number} [minVersion] - current browser's minimum supported version\n * @property {boolean} compatible - is current browser supported ?\n */\nexport const browser = Object.assign({\n\tcompatible: !/\\s/.test(browserDetails.browser) &&\n\t\t(!browserDetails.minVersion || browserDetails.version >= browserDetails.minVersion)\n}, browserDetails);\n\nconst version = `Reach v${SDK_VERSION} | Schema ${SCHEMA_VERSION} | Webcom v${Webcom.SDK_VERSION}`;\nlet message = '';\nif(browser.version === null) {\n\tmessage = 'Unsupported browser: browser must support WebRTC Peer-to-peer connections to use Reach';\n} else if (browser.minVersion && browser.minVersion > browser.version) {\n\tmessage = `Unsupported browser: browser is outdated, update to latest version (${browser.minVersion}+)`;\n} else if(!browserShim){\n\tmessage = 'No shim for your browser. There might a problem with your package.';\n}\n\n// Log browser status & SDKs versions on load\nlet args = [`${version} ${message}`];\nif(/^(chrome|firefox)$/.test(browser.browser)) {\n\targs = [\n\t\t`%c ${version} %c ${message}`,\n\t\t`background: ${browser.compatible ? '#f50' : 'red'}; color: #fff; font-weight: bold`,\n\t\t`color: ${browser.compatible ? 'inherit' : 'red'}`\n\t];\n}\nconsole.log(...args);\n",
    "static": true,
    "longname": "src/definitions/Browser.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 344,
    "kind": "typedef",
    "name": "Browser",
    "memberof": "src/definitions/Browser.js",
    "static": true,
    "longname": "src/definitions/Browser.js~Browser",
    "access": null,
    "description": "The current browser's infos",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "current browser's name"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "version",
        "description": "current browser's version"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "minVersion",
        "description": "current browser's minimum supported version"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "compatible",
        "description": "is current browser supported ?"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Browser"
    }
  },
  {
    "__docId__": 345,
    "kind": "variable",
    "name": "version",
    "memberof": "src/definitions/Browser.js",
    "static": true,
    "longname": "src/definitions/Browser.js~version",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/definitions/Browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "name": "message",
    "memberof": "src/definitions/Browser.js",
    "static": true,
    "longname": "src/definitions/Browser.js~message",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/definitions/Browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "variable",
    "name": "args",
    "memberof": "src/definitions/Browser.js",
    "static": true,
    "longname": "src/definitions/Browser.js~args",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/definitions/Browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "src/definitions/Codec.js",
    "content": "/**\n * Video codec presets to use for\n * @typedef {Object} Codec/video\n * @property {RegExp} VP8 VP8 is the only video codec officially supported by WebRTC\n * @property {RegExp} VP9 VP8's successor.\n * @property {RegExp} H264 MPEG-4 part 10. Only Firefox.\n * @property {RegExp} VP10 Suited for UHD video. No support yet\n * @property {RegExp} H265 H.264's successor. No support yet\n */\nexport const video = {\n\t'VP8': /^vp8/i,\n\t'VP9': /^vp9/i,\n\t'VP10': /^vp10/i,\n\t'H264': /^h264/i,\n\t'H265': /^h265/i\n};\n\n/**\n * Audio codec presets to use for\n * @typedef {Object} Codec/audio\n * @property {RegExp} OPUS Opus audio codec {@link http://opus-codec.org/}. Only choice for high-quality audio.\n * @property {RegExp} G722 G.722 audio codec\n * @property {RegExp} G711 G.711 audio codec\n * @property {RegExp} ISAC iSAC audio codec. Good for voice data, but not suitable for high-quality audio streams.\n * @property {RegExp} ISAC_16 iSAC audio codec (16kHz)\n * @property {RegExp} ISAC_32 iSAC audio codec (32kHz)\n * @property {RegExp} ILBC iLBC audio codec. For bad channels & low bandwidth.\n * @property {RegExp} ILBC iLBC audio codec. For bad channels & low bandwidth.\n */\nexport const audio = {\n\t'OPUS': /^opus/i,\n\t'G722': /^g722/i,\n\t'G711': /^g711/i,\n\t'ISAC': /^isac/i,\n\t'ISAC_16': /^isac\\/16000/i,\n\t'ISAC_32': /^isac\\/32000/i,\n\t'LSAC': /^lsac/i\n};",
    "static": true,
    "longname": "src/definitions/Codec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "typedef",
    "name": "Codec/video",
    "memberof": "src/definitions/Codec.js",
    "static": true,
    "longname": "src/definitions/Codec.js~Codec/video",
    "access": null,
    "description": "Video codec presets to use for",
    "lineNumber": 10,
    "properties": [
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "VP8",
        "description": "VP8 is the only video codec officially supported by WebRTC"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "VP9",
        "description": "VP8's successor."
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "H264",
        "description": "MPEG-4 part 10. Only Firefox."
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "VP10",
        "description": "Suited for UHD video. No support yet"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "H265",
        "description": "H.264's successor. No support yet"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Codec/video"
    }
  },
  {
    "__docId__": 350,
    "kind": "typedef",
    "name": "Codec/audio",
    "memberof": "src/definitions/Codec.js",
    "static": true,
    "longname": "src/definitions/Codec.js~Codec/audio",
    "access": null,
    "description": "Audio codec presets to use for",
    "lineNumber": 30,
    "properties": [
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "OPUS",
        "description": "Opus audio codec {@link http://opus-codec.org/}. Only choice for high-quality audio."
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "G722",
        "description": "G.722 audio codec"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "G711",
        "description": "G.711 audio codec"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ISAC",
        "description": "iSAC audio codec. Good for voice data, but not suitable for high-quality audio streams."
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ISAC_16",
        "description": "iSAC audio codec (16kHz)"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ISAC_32",
        "description": "iSAC audio codec (32kHz)"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ILBC",
        "description": "iLBC audio codec. For bad channels & low bandwidth."
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ILBC",
        "description": "iLBC audio codec. For bad channels & low bandwidth."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Codec/audio"
    }
  },
  {
    "__docId__": 351,
    "kind": "file",
    "name": "src/definitions/Events.js",
    "content": "import User from '../core/User';\nimport Room from '../core/Room';\nimport Invite from '../core/Invite';\nimport Participant from '../core/Participant';\nimport Message from '../core/Message';\nimport Remote from '../core/stream/Remote';\nimport {ACCEPTED, REJECTED, CANCELED} from '../core/util/constants';\n\n/**\n * The events supported by {@link Reach#on}\n * @typedef {Object} Events/Reach\n * @property {string} USER_ADDED Fired when a new user is registered\n * @property {string} USER_CHANGED Fired when an existing user logs in or out or changes is status\n * @property {string} USER_REMOVED Fired when a user is unregistered\n * @property {string} ROOM_ADDED Fired when a room is created\n * @property {string} ROOM_CHANGED Fired when a room status is changing\n * @property {string} ROOM_REMOVED Fired when a room is closed definitely\n * @property {string} INVITE_ADDED Fired when an invite is received\n * @property {string} INVITE_CHANGED Fired when an invite status is modified\n */\n\n/**\n * The events supported by {@link Room#on}\n * @typedef {Object} Events/Room\n * @property {string} PARTICIPANT_ADDED Fired when a new participant is added to the room. Does not mean he's connected but that he's invited to\n * @property {string} PARTICIPANT_CHANGED Fired when a participant changes is status (enter/leaves the room)\n * @property {string} PARTICIPANT_REMOVED Fired when a user leaves definitely or is banned\n * @property {string} MESSAGE_ADDED Fired when a new instant message is sent to the room\n * @property {string} MESSAGE_CHANGED Fired when an instant message is edited\n * @property {string} MESSAGE_REMOVED Fired when an instant message is removed\n * @property {string} STREAM_PUBLISHED Fired when a participant publishes a stream\n * @property {string} STREAM_UNPUBLISHED Fired when a participant stops the publishing of his stream\n */\n\n/**\n * The events supported by {@link Invite#on}\n * @typedef {Object} Events/Invite\n * @property {string} ACCEPTED Fired when the invite has been accepted\n * @property {string} REJECTED Fired when the invite has been accepted\n * @property {string} CANCELED Fired when the invite has been canceled\n */\n\n/**\n * The events supported by {@link Remote#on}.\n * @typedef {Object} Events/Stream\n * @property {string} MUTE Fired when the mute status of the stream changes\n * @property {string} SIZE Fired when the size of the stream changes\n */\n\n/**\n * Path configuration for each event\n * @ignore\n * @type {{}}\n */\nconst paths = {\n\t'USER': () => 'users',\n\t'ROOM': () => 'rooms',\n\t'INVITE': user => {\n\t\tif(!user) {\n\t\t\tthrow new Error('You must be authenticated to list the invites');\n\t\t}\n\t\treturn `_/invites/${user.uid}`;\n\t},\n\t'PARTICIPANT': room => `_/rooms/${room.uid}/participants`,\n\t'MESSAGE': room => `_/rooms/${room.uid}/messages`,\n\t'STREAM': room => `_/rooms/${room.uid}/streams`\n};\n\n/**\n * Object type configuration for each event\n * @ignore\n * @type {{}}\n */\nconst classes = {\n\t'USER': User,\n\t'ROOM': Room,\n\t'INVITE': Invite,\n\t'PARTICIPANT': Participant,\n\t'MESSAGE': Message,\n\t'STREAM': Remote\n};\n\n/**\n * Private class to add support test methods\n * @class _Events\n * @ignore\n */\nclass _Events {\n\tconstructor(keys) {\n\t\tkeys.forEach(key => {this[key] = key;});\n\t}\n\tsupports(event) {\n\t\tif(!event || typeof event !== 'string' || this[event] !== event.toUpperCase()) {\n\t\t\tthrow new Error(`Unsupported event. Use one of the following: ${JSON.stringify(Object.keys(this))}`);\n\t\t}\n\t\treturn true;\n\t}\n\ttoPath(event) {\n\t\tif(this.supports(event)) {\n\t\t\treturn paths[event.toUpperCase().replace(/_.*$/, '')] || (() => null);\n\t\t}\n\t}\n\ttoClass(event) {\n\t\tif(this.supports(event)) {\n\t\t\treturn classes[event.toUpperCase().replace(/_.*$/, '')];\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport const reach = new _Events([\n\t'USER_ADDED', 'USER_CHANGED', 'USER_REMOVED',\n\t'ROOM_ADDED', 'ROOM_CHANGED', 'ROOM_REMOVED',\n\t'INVITE_ADDED', 'INVITE_CHANGED'\n]);\n\n/**\n * @ignore\n */\nexport const room = new _Events([\n\t'MESSAGE_ADDED', 'MESSAGE_CHANGED', 'MESSAGE_REMOVED',\n\t'PARTICIPANT_ADDED', 'PARTICIPANT_CHANGED', 'PARTICIPANT_REMOVED',\n\t'STREAM_PUBLISHED', 'STREAM_UNPUBLISHED'\n]);\n\n/**\n * @ignore\n */\nexport const stream = new _Events(['MUTE', 'SIZE']);\n\n/**\n * @ignore\n */\nexport const invite = new _Events([ACCEPTED, REJECTED, CANCELED]);\n",
    "static": true,
    "longname": "src/definitions/Events.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "typedef",
    "name": "Events/Reach",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~Events/Reach",
    "access": null,
    "description": "The events supported by {@link Reach#on}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "USER_ADDED",
        "description": "Fired when a new user is registered"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "USER_CHANGED",
        "description": "Fired when an existing user logs in or out or changes is status"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "USER_REMOVED",
        "description": "Fired when a user is unregistered"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ROOM_ADDED",
        "description": "Fired when a room is created"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ROOM_CHANGED",
        "description": "Fired when a room status is changing"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ROOM_REMOVED",
        "description": "Fired when a room is closed definitely"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "INVITE_ADDED",
        "description": "Fired when an invite is received"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "INVITE_CHANGED",
        "description": "Fired when an invite status is modified"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Events/Reach"
    }
  },
  {
    "__docId__": 353,
    "kind": "typedef",
    "name": "Events/Room",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~Events/Room",
    "access": null,
    "description": "The events supported by {@link Room#on}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "PARTICIPANT_ADDED",
        "description": "Fired when a new participant is added to the room. Does not mean he's connected but that he's invited to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "PARTICIPANT_CHANGED",
        "description": "Fired when a participant changes is status (enter/leaves the room)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "PARTICIPANT_REMOVED",
        "description": "Fired when a user leaves definitely or is banned"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MESSAGE_ADDED",
        "description": "Fired when a new instant message is sent to the room"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MESSAGE_CHANGED",
        "description": "Fired when an instant message is edited"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MESSAGE_REMOVED",
        "description": "Fired when an instant message is removed"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "STREAM_PUBLISHED",
        "description": "Fired when a participant publishes a stream"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "STREAM_UNPUBLISHED",
        "description": "Fired when a participant stops the publishing of his stream"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Events/Room"
    }
  },
  {
    "__docId__": 354,
    "kind": "typedef",
    "name": "Events/Invite",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~Events/Invite",
    "access": null,
    "description": "The events supported by {@link Invite#on}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ACCEPTED",
        "description": "Fired when the invite has been accepted"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "REJECTED",
        "description": "Fired when the invite has been accepted"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CANCELED",
        "description": "Fired when the invite has been canceled"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Events/Invite"
    }
  },
  {
    "__docId__": 355,
    "kind": "typedef",
    "name": "Events/Stream",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~Events/Stream",
    "access": null,
    "description": "The events supported by {@link Remote#on}.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MUTE",
        "description": "Fired when the mute status of the stream changes"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "SIZE",
        "description": "Fired when the size of the stream changes"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Events/Stream"
    }
  },
  {
    "__docId__": 356,
    "kind": "variable",
    "name": "paths",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~paths",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": null,
    "description": "Path configuration for each event",
    "lineNumber": 55,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "classes",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~classes",
    "access": null,
    "export": false,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": null,
    "description": "Object type configuration for each event",
    "lineNumber": 74,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 358,
    "kind": "variable",
    "name": "reach",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~reach",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": "{reach}",
    "description": "",
    "lineNumber": 113,
    "ignore": true,
    "type": {
      "types": [
        "src/definitions/Events.js~_Events"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "room",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~room",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": "{room}",
    "description": "",
    "lineNumber": 122,
    "ignore": true,
    "type": {
      "types": [
        "src/definitions/Events.js~_Events"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "stream",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~stream",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": "{stream}",
    "description": "",
    "lineNumber": 131,
    "ignore": true,
    "type": {
      "types": [
        "src/definitions/Events.js~_Events"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "variable",
    "name": "invite",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~invite",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": "{invite}",
    "description": "",
    "lineNumber": 136,
    "ignore": true,
    "type": {
      "types": [
        "src/definitions/Events.js~_Events"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "class",
    "name": "_Events",
    "memberof": "src/definitions/Events.js",
    "static": true,
    "longname": "src/definitions/Events.js~_Events",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/Events.js",
    "importStyle": null,
    "description": "Private class to add support test methods",
    "lineNumber": 88,
    "ignore": true,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "_Events"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 363,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/definitions/Events.js~_Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/definitions/Events.js~_Events#constructor",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "keys",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/definitions/Events.js~_Events",
    "static": false,
    "longname": "src/definitions/Events.js~_Events#[key]",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "supports",
    "memberof": "src/definitions/Events.js~_Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/definitions/Events.js~_Events#supports",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "toPath",
    "memberof": "src/definitions/Events.js~_Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/definitions/Events.js~_Events#toPath",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "toClass",
    "memberof": "src/definitions/Events.js~_Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/definitions/Events.js~_Events#toClass",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "src/definitions/ICEServer.js",
    "content": "/**\n * TURN/STUN server configuration\n * @typedef {Object} ICEServer\n * @property {string|string[]} urls - The server url. (*stun:<ip|hostname>:<port>* or *turn:<ip|hostname>:<port?>*)\n * @property {string} [username] - The user name for this server\n * @property {string} [credential] - The password for this server\n */\n\n",
    "static": true,
    "longname": "src/definitions/ICEServer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "typedef",
    "name": "ICEServer",
    "memberof": "src/definitions/ICEServer.js",
    "static": true,
    "longname": "src/definitions/ICEServer.js~ICEServer",
    "access": null,
    "description": "TURN/STUN server configuration",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "urls",
        "description": "The server url. (*stun:<ip|hostname>:<port>* or *turn:<ip|hostname>:<port?>*)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "username",
        "description": "The user name for this server"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "credential",
        "description": "The password for this server"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ICEServer"
    }
  },
  {
    "__docId__": 370,
    "kind": "file",
    "name": "src/definitions/StreamTypes.js",
    "content": "/**\n * The available stream types\n * @typedef {Object} StreamTypes\n * @property {string} AUDIO='audio' - Audio communication service\n * @property {string} VIDEO='video' - Video communication service\n * @property {string} AUDIO_VIDEO='audio-video' - Audio and video communication service\n * @property {string} SCREEN_SHARING='screen-sharing' - Screen-sharing communication service\n */\n\n/**\n* Audio communication service\n* @ignore\n* @type {string}\n*/\nexport const AUDIO = 'audio';\n/**\n* Video communication service\n* @ignore\n* @type {string}\n*/\nexport const VIDEO = 'video';\n/**\n* Audio and video communication service\n* @ignore\n* @type {string}\n*/\nexport const AUDIO_VIDEO = 'audio-video';\n/**\n* Screen-sharing service\n* @ignore\n* @type {string}\n*/\nexport const SCREEN_SHARING = 'screen-sharing';\n\nexport default {AUDIO, VIDEO, AUDIO_VIDEO, SCREEN_SHARING};\n",
    "static": true,
    "longname": "src/definitions/StreamTypes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 371,
    "kind": "typedef",
    "name": "StreamTypes",
    "memberof": "src/definitions/StreamTypes.js",
    "static": true,
    "longname": "src/definitions/StreamTypes.js~StreamTypes",
    "access": null,
    "description": "The available stream types",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'audio'",
        "defaultRaw": "'audio'",
        "name": "AUDIO",
        "description": "Audio communication service"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'video'",
        "defaultRaw": "'video'",
        "name": "VIDEO",
        "description": "Video communication service"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'audio-video'",
        "defaultRaw": "'audio-video'",
        "name": "AUDIO_VIDEO",
        "description": "Audio and video communication service"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'screen-sharing'",
        "defaultRaw": "'screen-sharing'",
        "name": "SCREEN_SHARING",
        "description": "Screen-sharing communication service"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StreamTypes"
    }
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "AUDIO",
    "memberof": "src/definitions/StreamTypes.js",
    "static": true,
    "longname": "src/definitions/StreamTypes.js~AUDIO",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/StreamTypes.js",
    "importStyle": "{AUDIO}",
    "description": "Audio communication service",
    "lineNumber": 15,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "VIDEO",
    "memberof": "src/definitions/StreamTypes.js",
    "static": true,
    "longname": "src/definitions/StreamTypes.js~VIDEO",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/StreamTypes.js",
    "importStyle": "{VIDEO}",
    "description": "Video communication service",
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "name": "AUDIO_VIDEO",
    "memberof": "src/definitions/StreamTypes.js",
    "static": true,
    "longname": "src/definitions/StreamTypes.js~AUDIO_VIDEO",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/StreamTypes.js",
    "importStyle": "{AUDIO_VIDEO}",
    "description": "Audio and video communication service",
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "SCREEN_SHARING",
    "memberof": "src/definitions/StreamTypes.js",
    "static": true,
    "longname": "src/definitions/StreamTypes.js~SCREEN_SHARING",
    "access": null,
    "export": true,
    "importPath": "webcom-reach/src/definitions/StreamTypes.js",
    "importStyle": "{SCREEN_SHARING}",
    "description": "Screen-sharing service",
    "lineNumber": 33,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "src/external/datasync/Webcom.js",
    "content": "/**\n * @external {Webcom} https://datasync.orange.com/doc/Webcom.html\n */\n",
    "static": true,
    "longname": "src/external/datasync/Webcom.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "external",
    "name": "Webcom",
    "externalLink": "https://datasync.orange.com/doc/Webcom.html",
    "memberof": "src/external/datasync/Webcom.js",
    "static": true,
    "longname": "src/external/datasync/Webcom.js~Webcom",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 378,
    "kind": "file",
    "name": "src/external/datasync/api.DataSnapshot.js",
    "content": "/**\n* @external {Webcom/api.DataSnapshot} https://datasync.orange.com/doc/api.DataSnapshot.html\n* @access protected\n*/\n",
    "static": true,
    "longname": "src/external/datasync/api.DataSnapshot.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "external",
    "name": "Webcom/api.DataSnapshot",
    "externalLink": "https://datasync.orange.com/doc/api.DataSnapshot.html",
    "memberof": "src/external/datasync/api.DataSnapshot.js",
    "static": true,
    "longname": "src/external/datasync/api.DataSnapshot.js~Webcom/api.DataSnapshot",
    "access": "protected",
    "description": ""
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "src/external/datasync/api.OnDisconnect.js",
    "content": "/**\n* @external {Webcom/api.OnDisconnect} https://datasync.orange.com/doc/api.OnDisconnect.html\n* @access protected\n*/\n",
    "static": true,
    "longname": "src/external/datasync/api.OnDisconnect.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "external",
    "name": "Webcom/api.OnDisconnect",
    "externalLink": "https://datasync.orange.com/doc/api.OnDisconnect.html",
    "memberof": "src/external/datasync/api.OnDisconnect.js",
    "static": true,
    "longname": "src/external/datasync/api.OnDisconnect.js~Webcom/api.OnDisconnect",
    "access": "protected",
    "description": ""
  },
  {
    "__docId__": 382,
    "kind": "file",
    "name": "src/external/datasync/api.Query.js",
    "content": "/**\n * @external {Webcom/api.Query~queryCallback} https://datasync.orange.com/doc/api.Query.html#~queryCallback\n * @access protected\n */\n/**\n * @external {Webcom/api.Query~cancelCallback} https://datasync.orange.com/doc/api.Query.html#~cancelCallback\n */\n",
    "static": true,
    "longname": "src/external/datasync/api.Query.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "external",
    "name": "Webcom/api.Query~queryCallback",
    "externalLink": "https://datasync.orange.com/doc/api.Query.html#~queryCallback",
    "memberof": "src/external/datasync/api.Query.js",
    "static": true,
    "longname": "src/external/datasync/api.Query.js~Webcom/api.Query~queryCallback",
    "access": "protected",
    "description": ""
  },
  {
    "__docId__": 384,
    "kind": "external",
    "name": "Webcom/api.Query~cancelCallback",
    "externalLink": "https://datasync.orange.com/doc/api.Query.html#~cancelCallback",
    "memberof": "src/external/datasync/api.Query.js",
    "static": true,
    "longname": "src/external/datasync/api.Query.js~Webcom/api.Query~cancelCallback",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "src/external/dom/Element.js",
    "content": "/**\n * @external {Element} https://developer.mozilla.org/en-US/docs/Web/API/Element\n */\n",
    "static": true,
    "longname": "src/external/dom/Element.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "src/external/dom/Element.js",
    "static": true,
    "longname": "src/external/dom/Element.js~Element",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 387,
    "kind": "file",
    "name": "src/external/webrtc/MediaDeviceInfo.js",
    "content": "/**\n * @external {MediaDeviceInfo} http://w3c.github.io/mediacapture-main/#idl-def-MediaDeviceInfo\n */",
    "static": true,
    "longname": "src/external/webrtc/MediaDeviceInfo.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 388,
    "kind": "external",
    "name": "MediaDeviceInfo",
    "externalLink": "http://w3c.github.io/mediacapture-main/#idl-def-MediaDeviceInfo",
    "memberof": "src/external/webrtc/MediaDeviceInfo.js",
    "static": true,
    "longname": "src/external/webrtc/MediaDeviceInfo.js~MediaDeviceInfo",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "src/external/webrtc/MediaStream.js",
    "content": "/**\n * @external {MediaStream} https://w3c.github.io/mediacapture-main/getusermedia.html#stream-api\n */",
    "static": true,
    "longname": "src/external/webrtc/MediaStream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "external",
    "name": "MediaStream",
    "externalLink": "https://w3c.github.io/mediacapture-main/getusermedia.html#stream-api",
    "memberof": "src/external/webrtc/MediaStream.js",
    "static": true,
    "longname": "src/external/webrtc/MediaStream.js~MediaStream",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "src/external/webrtc/MediaStreamConstrains.js",
    "content": "/**\n * @external {MediaStreamConstraints} https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints\n */",
    "static": true,
    "longname": "src/external/webrtc/MediaStreamConstrains.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "external",
    "name": "MediaStreamConstraints",
    "externalLink": "https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints",
    "memberof": "src/external/webrtc/MediaStreamConstrains.js",
    "static": true,
    "longname": "src/external/webrtc/MediaStreamConstrains.js~MediaStreamConstraints",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 393,
    "kind": "file",
    "name": "src/external/webrtc/MediaTrackConstraints.js",
    "content": "/**\n * @external {MediaTrackConstraints} https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaTrackConstraints\n */",
    "static": true,
    "longname": "src/external/webrtc/MediaTrackConstraints.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 394,
    "kind": "external",
    "name": "MediaTrackConstraints",
    "externalLink": "https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaTrackConstraints",
    "memberof": "src/external/webrtc/MediaTrackConstraints.js",
    "static": true,
    "longname": "src/external/webrtc/MediaTrackConstraints.js~MediaTrackConstraints",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "src/external/webrtc/RTCPeerConnection.js",
    "content": "/**\n * @external {RTCPeerConnection} https://w3c.github.io/webrtc-pc/#interface-definition\n */",
    "static": true,
    "longname": "src/external/webrtc/RTCPeerConnection.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "external",
    "name": "RTCPeerConnection",
    "externalLink": "https://w3c.github.io/webrtc-pc/#interface-definition",
    "memberof": "src/external/webrtc/RTCPeerConnection.js",
    "static": true,
    "longname": "src/external/webrtc/RTCPeerConnection.js~RTCPeerConnection",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 397,
    "kind": "file",
    "name": "src/external/webrtc/RTCRtpSender.js",
    "content": "/**\n * @external {RTCRtpSender} https://w3c.github.io/webrtc-pc/#rtcrtpsender-interface\n */\n",
    "static": true,
    "longname": "src/external/webrtc/RTCRtpSender.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "external",
    "name": "RTCRtpSender",
    "externalLink": "https://w3c.github.io/webrtc-pc/#rtcrtpsender-interface",
    "memberof": "src/external/webrtc/RTCRtpSender.js",
    "static": true,
    "longname": "src/external/webrtc/RTCRtpSender.js~RTCRtpSender",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "src/external/webrtc/RTCSessionDescription.js",
    "content": "/**\n * @external {RTCSessionDescription} https://w3c.github.io/webrtc-pc/#rtcsessiondescription-class\n */",
    "static": true,
    "longname": "src/external/webrtc/RTCSessionDescription.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "external",
    "name": "RTCSessionDescription",
    "externalLink": "https://w3c.github.io/webrtc-pc/#rtcsessiondescription-class",
    "memberof": "src/external/webrtc/RTCSessionDescription.js",
    "static": true,
    "longname": "src/external/webrtc/RTCSessionDescription.js~RTCSessionDescription",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 402,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 403,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 404,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 405,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 406,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 407,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 408,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 409,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 410,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 411,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 412,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 413,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 414,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 415,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 416,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 417,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 418,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 419,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 420,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 421,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 422,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 423,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 424,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 425,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 426,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 427,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 428,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 429,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 430,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 431,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 432,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 433,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 434,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 435,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 436,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 437,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 438,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 439,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 440,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 441,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 442,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 443,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 444,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 445,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 446,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 447,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 448,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 450,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 451,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 452,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 453,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 454,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 455,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 456,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 457,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]